<%@ CodeTemplate Language="C#" TargetLanguage="C#"  ResponseEncoding="UTF-8" Description="根据存储过程生成实体" %>

<%@ Property Name="NameSpace" Type="System.String" Category="Context" Description="实体模型命名空间" Optional="True" %>
<%@ Property Name="SourceCommand" Type="SchemaExplorer.CommandSchema" Category="Context" Description="存储过程结构" %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Src="Common.cs" %>

<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="XTemplate" %>

using System;

namespace <%=NameSpace %>
{
	public partial class <%= SourceCommand.Name %> 
	{
        #region 私有变量
        
        #endregion
    
        #region 公开属性
        
		<% for (int i = 0; i < SourceCommand.Parameters.Count; i++) { %>
		public virtual <%= Common.GetCSharpVariableType(SourceCommand.Parameters[i]) %> <%= SourceCommand.Parameters[i].Name.Substring(1,SourceCommand.Parameters[i].Name.Length-1) %>
		{
			get;
			set;
		}
		<% if (i < SourceCommand.Parameters.Count - 1) Response.Write("\r\n"); %>	
		<%}%>
        
        #endregion
        
        #region 构造函数
        
        #endregion
        
        #region 重写方法
        
        #endregion
        
        #region 公开方法
        
        #endregion
        
        #region 辅助方法
        
        #endregion
	}
}