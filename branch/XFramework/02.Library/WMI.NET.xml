<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WMI.NET</name>
    </assembly>
    <members>
        <member name="T:WMI.NET.CIM.CIM_Action">
            <summary>
            A CIM_Action class is an operation that is part of a process to either create a software element in its next state or to eliminate the software element in the current state. 
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_Action.Invoke">
            <summary>
            The Invoke method of the CIM_Action class takes a particular action. The details of how the method performs the action is implementation-specific.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.CIM.CIM_Action.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Action.ActionID">
            <summary>
            Unique identifier assigned to a particular action for a software element.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Action.Caption">
            <summary>
            Short textual description of the object. 
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Action.Description">
            <summary>
            Description of the object.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Action.Direction">
            <summary>
            Indicates whether a particular CIM_Action object is part of a sequence of actions to transition the current software element to its next state, such as "Install", or to remove the current software element, such as "Uninstall".
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Action.Name">
            <summary>
            Identifies the software element.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Action.SoftwareElementID">
            <summary>
            Identifier for the software element.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Action.SoftwareElementState">
            <summary>
            State of a software element.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Action.TargetOperatingSystem">
            <summary>
            Target operating system of the owning software element.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Action.Version">
            <summary>
            Version of the operation.
            The version of the operation should be in one of the following forms:
               major.minor.revision
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_ActionSequence">
            <summary>
            The CIM_ActionSequence association defines a series of operations that transition the software element (referenced by the CIM_SoftwareElementActions association) to its next state, or removes the software element from its current state.
            The next-state actions and uninstall actions associated with a particular software element must be a continuous sequence. Since CIM_ActionSequence is an association, the loops on the CIM_Action class, with roles for the "prior" action and "next" action, form a sequence.
            The need for a continuous sequence implies:
               Within the set of next-state or uninstall actions, there is only one action that does not have an instance of the CIM_ActionSequence association referencing it in the "next" role. This is the first action in the sequence.
               Within the set of next-state or uninstall actions, there is only one action that does not have an instance of the CIM_ActionSequence association referencing it in the "prior" role. This is the last action in the sequence.
               All other actions within the set of next-state and uninstall actions must participate in two instances of the CIM_ActionSequence association, one in a "prior" role and one in the "next" role.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_ActionSequence.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ActionSequence.Next">
            <summary>
            Reference to the next action.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ActionSequence.Prior">
            <summary>
            Reference to the prior action.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_ActiveConnection">
            <summary>
            Defines a connection that is currently communicating, or is configured to communicate, between two service access points. It is used when the connection is not handled as a managed element itself (that is, with Status, statistics, and so on), but its existence is known. A service access point (SAP) that is connected typically operates at the same networking or application layer.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_SAPSAPDependency">
            <summary>
            The CIM_SAPSAPDependency class is an association between two service access points (SAPs), which indicates that the second SAP is required for the first SAP to connect with its service. For example, to print on a network printer, local printer access points must use underlying network-related SAPs, or protocol endpoints, to send the print request.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_Dependency">
            <summary>
            The CIM_Dependency class represents an association that establishes dependency relationships between objects. 
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_Dependency.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Dependency.Antecedent">
            <summary>
            Reference to the independent object in this association.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Dependency.Dependent">
            <summary>
            Reference to the object that is dependent on the Antecedent property.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_SAPSAPDependency.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_SAPSAPDependency.Antecedent">
            <summary>
            The required SAP.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_SAPSAPDependency.Dependent">
            <summary>
            The SAP is dependent on an underlying SAP.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_ActiveConnection.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ActiveConnection.Antecedent">
            <summary>
            A SAP that is configured to communicate or is actively communicating with the dependent SAP. In a unidirectional connection, this is the transmitting SAP.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ActiveConnection.Dependent">
            <summary>
            A second SAP that is configured to communicate or is actively communicating with the antecedent SAP. In a unidirectional connection, this is the receiving SAP.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ActiveConnection.TrafficType">
            <summary>
            Note: The use of this element is deprecated because it is incorrectly placed on the association. Unicast, broadcast, or other traffic types are not a function of the connection between the referenced endpoints, but rather are a function of the addressing, protocol, and basic functionality of the endpoints. Deprecated description: The type of traffic that is carried over this connection.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ActiveConnection.OtherTrafficDescription">
            <summary>
            Note: The use of this element is deprecated because it is incorrectly placed on the association. Unicast, broadcast, or other traffic types are not a function of the connection between the referenced endpoints, but rather are a function of the addressing, protocol, and basic functionality of the endpoints. Deprecated description: A string that describes the type of traffic that is being carried over this instance when its Type property is set, for example, to 1 (Other).
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ActiveConnection.IsUnidirectional">
            <summary>
            TRUE indicates that this connection is unidirectional; FALSE indicates that this connection is bidirectional. When the connection is unidirectional, the "speaker" should be defined as the antecedent reference. In a bidirectional connection, the selection of which access point is the antecedent or dependent is immaterial.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_ActsAsSpare">
            <summary>
            The CIM_ActsAsSpare association indicates which elements can be spares or replace other aggregated elements. A spare can operate in "hot-standby" mode as specified on an element-by-element basis. 
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_ActsAsSpare.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ActsAsSpare.Group">
            <summary>
            Reference to the Group property that represents the CIM_SpareGroup class.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ActsAsSpare.HotStandby">
            <summary>
            If TRUE, the spare is operating as a hot standby.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ActsAsSpare.Spare">
            <summary>
            Reference to a managed system element acting as a spare and participating in the spare group.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_AllocatedResource">
            <summary>
            The CIM_AllocatedResource class represents an association between logical devices and system resources and indicates that the resource is assigned to the device.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_AllocatedResource.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_AllocatedResource.Antecedent">
            <summary>
            
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_AllocatedResource.Dependent">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_AssociatedMemory">
            <summary>
            The CIM_AssociateMemory class associates installed or associated memory, such as cache memory with a logical device. 
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_AssociatedMemory.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_AssociatedMemory.Antecedent">
            <summary>
            Reference to the memory installed on, or associated with, a device.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_AssociatedMemory.Dependent">
            <summary>
            Reference to the logical device.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_AssociatedProcessorMemory">
            <summary>
            The CIM_AssociatedProcessorMemory class associates the processor and system memory, or a processor's cache. 
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_AssociatedProcessorMemory.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_AssociatedProcessorMemory.Antecedent">
            <summary>
            Reference to the memory installed on or associated with a device.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_AssociatedProcessorMemory.BusSpeed">
            <summary>
            Speed of the bus, in megahertz (MHz), between the processor and memory.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_AssociatedProcessorMemory.Dependent">
            <summary>
            Reference to the processor that accesses the memory or uses the cache.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_BIOSElement">
            <summary>
            The CIM_BIOSElement class represents the low-level software that is loaded into non-volatile storage and used to start and configure a computer system.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_SoftwareElement">
            <summary>
            The CIM_SoftwareElement class decomposes a CIM_SoftwareFeature object into a set of individually manageable or deployable parts for a particular platform. A software element's platform is uniquely identified by its underlying hardware architecture and operating system.
            As such, to understand the details of how the functionality of a particular software feature is provided on a particular platform, the CIM_SoftwareElement objects referenced by CIM_SoftwareFeatureSoftwareElements associations are organized in disjoint sets based on the TargetOperatingSystem property. A CIM_SoftwareElement object captures the management details of a part or component in one of four states characterized by the SoftwareElementState property.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_LogicalElement">
            <summary>
            The CIM_LogicalElement class is the base class for all system components that represent abstract system components, such as profiles, processes, or system capabilities, in the form of logical devices. 
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_ManagedSystemElement">
            <summary>
            The CIM_ManagedSystemElement class is the base class for the system element hierarchy. Any distinguishable system component is a candidate for inclusion in this class. Examples include software components, such as files; devices, such as disk drives and controllers; and physical components, such as chips and cards.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_ManagedSystemElement.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ManagedSystemElement.Caption">
            <summary>
            Short textual description of the object.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ManagedSystemElement.Description">
            <summary>
            Textual description of the object.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ManagedSystemElement.InstallDate">
            <summary>
            Date and time the object was installed. This property does not need a value to indicate that the object is installed.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ManagedSystemElement.Name">
            <summary>
            Label by which the object is known. When subclassed, this property can be overridden to be a key property.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ManagedSystemElement.Status">
            <summary>
            String that indicates the current status of the object. Operational and non-operational status can be defined. Operational status can include "OK", "Degraded", and "Pred Fail". "Pred Fail" indicates that an element is functioning properly, but is predicting a failure (for example, a SMART-enabled hard disk drive).
            Non-operational status can include "Error", "Starting", "Stopping", and "Service". "Service" can apply during disk mirror-resilvering, reloading a user permissions list, or other administrative work. Not all such work is online, but the managed element is neither "OK" nor in one of the other states.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_LogicalElement.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="M:WMI.NET.CIM.CIM_SoftwareElement.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_SoftwareElement.BuildNumber">
            <summary>
            Internal identifier for the compilation of this software element.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_SoftwareElement.CodeSet">
            <summary>
            Code set used by the software element.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_SoftwareElement.IdentificationCode">
            <summary>
            Manufacturer's identifier for the software element, often a stock-keeping unit (SKU) or part number.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_SoftwareElement.LanguageEdition">
            <summary>
            Language edition of the software element. The language codes defined in ISO 639 should be used. Where the software element represents multilingual or international versions of a product, the string "multilingual" should be used.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_SoftwareElement.Manufacturer">
            <summary>
            Manufacturer of the software element.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_SoftwareElement.OtherTargetOS">
            <summary>
            Manufacturer and operating system type for a software element when the TargetOperatingSystem property has a value of 1 ("Other"). When the TargetOperatingSystem property has a value of 1, this property must have a non-null value. For all other TargetOperatingSystem values, this property is null.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_SoftwareElement.SerialNumber">
            <summary>
            Serial number of the software element.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_SoftwareElement.SoftwareElementID">
            <summary>
            Identifier for the software element. It is designed to be used in conjunction with other keys to create a unique representation of this CIM_SoftwareElement.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_SoftwareElement.SoftwareElementState">
            <summary>
            State of a software element.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_SoftwareElement.TargetOperatingSystem">
            <summary>
            Operating system environment. The value of this property does not ensure binary executability, more information is needed. The operating system version must be specified using the operating system version check. Also needed, is the architecture on which the operating system runs. The combination of these constructs allows the provider to clearly identify the level of operating system required for a particular software element.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_SoftwareElement.Version">
            <summary>
            Version of the operation.
            The version of the operation should be in one of the following forms:
               major.minor.revision
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_BIOSElement.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_BIOSElement.PrimaryBIOS">
            <summary>
            If TRUE, this is the primary BIOS of the computer system.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_CDROMDrive">
            <summary>
            The CIM_CDROMDrive class represents a CD-ROM drive on the computer.
            Note  The name of the drive does not correspond to the logical drive letter assigned to the device, which is the name of the logical storage device that is dependent on the drive.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_MediaAccessDevice">
            <summary>
            The CIM_MediaAccessDevice class represents the ability to access one or more media, and then use the media to store and retrieve data.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_LogicalDevice">
            <summary>
            The CIM_LogicalDevice class represents a hardware entity that may or may not be realized in physical hardware. Logical device characteristics that manage operation or configuration are contained in, or associated with, the CIM_LogicalDevice object. Printer operational properties, for example, are supported paper sizes or detected errors. Sensor device configuration properties, for example, are threshold settings. Various configurations can exist for a logical device and are contained in the CIM_Setting objects, which are associated with the logical device.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_LogicalDevice.Reset">
            <summary>
            Requests a reset of the logical device. Not implemented by WMI.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.CIM.CIM_LogicalDevice.SetPowerState(System.UInt16,System.DateTimeOffset)">
            <summary>
            Defines the desired power state for a logical device and when a device should be put into that state. Not implemented by WMI.
            </summary>
            <param name="PowerState">A ValueMap value that specifies the desired power state for this logical device.</param>
            <param name="Time">Specifies when the power state should be set, either as a regular date-time value or as an interval value (where the interval begins when the method invocation is received). When the PowerState parameter is equal to 5 ("Power Cycle"), the Time parameter indicates when the device should power on again. Power-off is immediate.</param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.CIM.CIM_LogicalDevice.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_LogicalDevice.Availability">
            <summary>
            Availability and status of the device.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_LogicalDevice.ConfigManagerErrorCode">
            <summary>
            Win32 Configuration Manager error code.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_LogicalDevice.ConfigManagerUserConfig">
            <summary>
            If TRUE, the device is using a user-defined configuration.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_LogicalDevice.CreationClassName">
            <summary>
            Name of the class or subclass used in the creation of an instance. When used with other key properties of the class, this property allows all instances of the class and its subclasses to be uniquely identified.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_LogicalDevice.DeviceID">
            <summary>
            Address or other identifying information to uniquely name the logical device.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_LogicalDevice.ErrorCleared">
            <summary>
            If TRUE, the error reported in the LastErrorCode property is now cleared.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_LogicalDevice.ErrorDescription">
            <summary>
            Free-form string that supplies information about the error recorded in the LastErrorCode property and corrective actions to perform.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_LogicalDevice.LastErrorCode">
            <summary>
            Last error code reported by the logical device.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_LogicalDevice.PNPDeviceID">
            <summary>
            Indicates the Win32 Plug and Play device identifier of the logical device.
            Example: "*PNP030b"
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_LogicalDevice.PowerManagementCapabilities">
            <summary>
            Array of the specific power-related capabilities of a logical device.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_LogicalDevice.PowerManagementSupported">
            <summary>
            If TRUE, the device can be power managed, that is, put into a power-save state. If FALSE, the integer value 1 ("Not Supported") should be the only entry in the PowerManagementCapabilities array.
            This property does not indicate whether power management features are currently enabled, or if enabled, which features are supported. For more information, see the PowerManagementCapabilities array.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_LogicalDevice.StatusInfo">
            <summary>
            State of the logical device. If this property does not apply to the logical device, the value 5 ("Not Applicable") should be used.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_LogicalDevice.SystemCreationClassName">
            <summary>
            Scoping system's creation class name.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_LogicalDevice.SystemName">
            <summary>
            Scoping system's name.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_MediaAccessDevice.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_MediaAccessDevice.Capabilities">
            <summary>
            Capabilities of the media access device. 
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_MediaAccessDevice.CapabilityDescriptions">
            <summary>
            Array of free-form strings that provides detailed explanations for access device features indicated in the Capabilities array.
            Note   Each entry of this array is related to the entry in the Capabilities array, located at the same index.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_MediaAccessDevice.CompressionMethod">
            <summary>
            Free-form string that indicates the algorithm or tool used to compress the logical file. If the compression scheme is unknown or not described, use "Unknown". If the logical file is compressed, but the compression scheme is unknown or not described, use "Compressed". If the logical file is not compressed, use "Not Compressed". 
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_MediaAccessDevice.DefaultBlockSize">
            <summary>
            Default block size, in bytes, for the device.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_MediaAccessDevice.ErrorMethodology">
            <summary>
            Free-form string that describes the types of error detection and correction supported by the device.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_MediaAccessDevice.MaxBlockSize">
            <summary>
            Maximum block size, in bytes, for media accessed by the device.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_MediaAccessDevice.MaxMediaSize">
            <summary>
            Maximum size, in kilobytes, of media supported by this device. Kilobytes are interpreted as the number of bytes multiplied by 1000 (not the number of bytes multiplied by 1024).
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_MediaAccessDevice.MinBlockSize">
            <summary>
            Minimum block size, in bytes, for media accessed by the device.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_MediaAccessDevice.NeedsCleaning">
            <summary>
            If TRUE, the media access device needs cleaning. Whether manual or automatic cleaning is possible is indicated in the Capabilities array property.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_MediaAccessDevice.NumberOfMediaSupported">
            <summary>
            Maximum number of multiple individual media that can be supported or inserted.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_CDROMDrive.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="T:WMI.NET.CIM.CIM_Chip">
            <summary>
            The CIM_Chip class represents the type of integrated circuit hardware, including ASICs, processors, memory chips, and so on.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_PhysicalComponent">
            <summary>
            The CIM_PhysicalComponent class represents a low-level or basic component within a package. A physical element that is not a link, connector, or package is a descendent (or member) of this class. For example, the UART chipset on an internal modem card would be a subclass (if additional properties or associations are defined) or an instance of CIM_PhysicalComponent. 
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_PhysicalElement">
            <summary>
            The CIM_PhysicalElement subclasses define any component of a system that has a distinct physical identity. Instances of this class can be defined in terms of labels that can be physically attached to the object. All processes, files, and logical devices are not considered to be physical elements. For example, it is not possible to attach a label to a modem; it is only possible to attach a label to the card that implements the modem. The same card could also implement a LAN adapter.
            Tangible managed system elements (usually hardware items) have a physical manifestation. A managed system element is not necessarily a discrete component. For example, it is possible for a single card (a type of physical element) to host more than one logical device. The card would be represented by a single physical element associated with multiple logical devices. 
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_PhysicalElement.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalElement.CreationClassName">
            <summary>
            Name of the class or subclass used in the creation of an instance. When used with other key properties of the class, this property allows all instances of the class and its subclasses to be uniquely identified.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalElement.Manufacturer">
            <summary>
            Name of the organization responsible for producing the physical element.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalElement.Model">
            <summary>
            Name by which the physical element is generally known.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalElement.OtherIdentifyingInfo">
            <summary>
            Additional data, beyond asset tag information, that can be used to identify a physical element. One example is bar-code data that is associated with an element, which also has an asset tag. Note that if only bar-code data is available, and is unique and able to be used as an element key, this property would be null and the bar-code data would be used as the class key in the Tag property. 
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalElement.PartNumber">
            <summary>
            Part number assigned by the organization responsible for producing or manufacturing the physical element.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalElement.PoweredOn">
            <summary>
            If TRUE, the physical element is powered on. Otherwise, it is currently off.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalElement.SerialNumber">
            <summary>
            Manufacturer-allocated number used to identify the physical element.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalElement.SKU">
            <summary>
            Stock-keeping unit number for this physical element.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalElement.Tag">
            <summary>
            Arbitrary string that uniquely identifies the physical element and serves as the element's key. This property can contain information, such as asset tag or serial number data. The key for CIM_PhysicalElement is placed very high in the object hierarchy to independently identify the hardware or entity, regardless of physical placement in (or on) cabinets, adapters, and so on. For example, a removable component that can be hot-swapped can be taken from its containing (scoping) package and be temporarily unused. The object still continues to exist and can even be inserted into a different scoping container. The key for a physical element is an arbitrary string that is defined independently of placement or location-oriented hierarchy.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalElement.Version">
            <summary>
            String that indicates the version of the physical element.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_PhysicalComponent.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalComponent.HotSwappable">
            <summary>
            If TRUE, the package can be hot-swapped. A physical package can be hot-swapped if the element can be replaced by a physically different (but equivalent) one while the containing package is turned on. For example, a fan component may be designed to be hot-swapped. All components that can be hot-swapped are inherently removable and replaceable.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalComponent.Removable">
            <summary>
            If TRUE, this element is designed to be taken in and out of the physical container in which it is normally found, without impairing the function of the overall packaging. A package is considered removable even if the power must be off to perform the removal. If the power can be on and the package removed, then the element is removable and can be hot-swapped. For example, an upgradeable processor chip is removable.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalComponent.Replaceable">
            <summary>
            If TRUE, it is possible to replace the element with a physically different one. For example, some computer systems allow the main processor chip to be upgraded to one of a higher clock rating. In this case, the processor is said to be replaceable. All removable components are inherently replaceable.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_Chip.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Chip.FormFactor">
            <summary>
            Implementation form factor for the chip.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_ControlledBy">
            <summary>
            The CIM_ControlledBy relationship indicates which devices are commanded by, or accessed through, the controller logical device. 
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_DeviceConnection">
            <summary>
            The CIM_DeviceConnection association class represents two or more connected devices. 
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_DeviceConnection.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_DeviceConnection.NegotiatedDataWidth">
            <summary>
            When several bus or connection-data widths are possible, this property defines the one in use between the devices. Data width is specified in bits. If data width is not negotiated, or if this information is not available or important to device management, the property should be set to 0 (zero).
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_DeviceConnection.NegotiatedSpeed">
            <summary>
            When several bus or connection speeds are possible, this property defines the one being used between the devices. Speed is specified in bits-per-second. If connection or bus speeds are not negotiated, or if this information is not available or important to device management, the property should be set to 0 (zero).
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_ControlledBy.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ControlledBy.AccessState">
            <summary>
            Indicates whether the controller is actively commanding or accessing the device. This information is necessary when a logical device can be commanded by, or accessed through, multiple controllers.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ControlledBy.NumberOfHardResets">
            <summary>
            Number of hard resets issued by the controller. A hard reset returns the device to its initialization or boot-up state. All internal device state information and data are lost.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ControlledBy.NumberOfSoftResets">
            <summary>
            Number of soft resets issued by the controller. A soft reset does not completely clear current device state and data. Exact semantics are dependent on the device and on the protocols and mechanisms used to communicate to it.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_Controller">
            <summary>
            The CIM_Controller class is a parent class for grouping miscellaneous control-related devices. Examples of controllers are SCSI controllers, USB controllers, and serial controllers. The CIM_Controller class is an abstraction for devices with a single protocol stack, which exist primarily for communication to, and control or reset of, downstream (CIM_ControlledBy) devices.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_Controller.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Controller.MaxNumberControlled">
            <summary>
            Maximum number of directly addressable entities supported by this controller. A value of 0 should be used if the number is unknown or unlimited.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Controller.ProtocolSupported">
            <summary>
            Protocol used by the controller to access 'controlled' devices.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Controller.TimeOfLastReset">
            <summary>
            Date and time the controller was last reset (powered down or reinitialized).
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_CoolingDevice">
            <summary>
            The CIM_CoolingDevice class represents the capabilities and management of cooling devices.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_CoolingDevice.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_CoolingDevice.ActiveCooling">
            <summary>
            If TRUE, the cooling device provides active (as opposed to passive) cooling.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_CopyFileAction">
            <summary>
            The CIM_CopyFileAction class represents moving or copying files from a computer system to a new location. Location information for copying is specified by using either the CIM_ToDirectorySpecification and CIM_FromDirectorySpecification associations, or the CIM_ToDirectoryAction and CIM_FromDirectoryAction associations. The first set is used when the source or target are to exist before any actions are taken. The second set is used when the source or target are created as a part of a previous action. In the latter case, the action to create the directory must occur prior to the CIM_CopyFileAction object.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_FileAction">
            <summary>
            The CIM_FileAction class allows the author to locate files that already exist on a user's computer, and then move or copy those files to a new location.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_FileAction.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="M:WMI.NET.CIM.CIM_CopyFileAction.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_CopyFileAction.DeleteAfterCopy">
            <summary>
            If TRUE, the source file is deleted after the copy operation.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_CopyFileAction.Destination">
            <summary>
            Fully qualified destination file name.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_CopyFileAction.Source">
            <summary>
            Fully qualified source file name.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_DesktopMonitor">
            <summary>
            The CIM_DesktopMonitor class represents the capabilities and management of the desktop monitor (CRT) logical device.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_Display">
            <summary>
            The CIM_Display class is a parent class for grouping miscellaneous display devices.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_UserDevice">
            <summary>
            The CIM_UserDevice class is a parent class from which other classes, such as CIM_Keyboard or CIM_DesktopMonitor, descend. User devices are logical devices that allow a computer system's user to input, view, or hear data.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_UserDevice.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_UserDevice.IsLocked">
            <summary>
            If TRUE, the device is locked, preventing user input or output.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_Display.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="M:WMI.NET.CIM.CIM_DesktopMonitor.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_DesktopMonitor.Bandwidth">
            <summary>
            Monitor's bandwidth in MHz. If unknown, use 0 (zero).
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_DesktopMonitor.DisplayType">
            <summary>
            Type of desktop monitor or CRT. 
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_DesktopMonitor.ScreenHeight">
            <summary>
            Logical height of the display, in screen coordinates.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_DesktopMonitor.ScreenWidth">
            <summary>
            Logical width of the display, in screen coordinates.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_DiskDrive">
            <summary>
            The CIM_DiskDrive class represents a physical disk drive as seen by the operating system. The disk drive features correspond to the logical and management characteristics of the drive, and in some cases, may not reflect the physical characteristics of the device. An interface to a physical drive is a member of this class. However, an object based on another logical device is not a member of this class.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_DiskDrive.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="T:WMI.NET.CIM.CIM_DisketteDrive">
            <summary>
            The CIM_DisketteDrive class represents the capabilities and management of a diskette drive.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_DisketteDrive.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="T:WMI.NET.CIM.CIM_DiskPartition">
            <summary>
            The CIM_DiskPartition class represents a contiguous range of logical blocks that is identifiable by the operating system by way of the partition's type and subtype fields. Disk partitions should be directly realized by physical media (indicated by the CIM_RealizesDiskPartition association) or built on storage volumes.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_StorageExtent">
            <summary>
            The CIM_StorageExtent class represents the capabilities and management of the various media that exist to store data and allow data retrieval. This parent class can represent the various components of RAID (hardware or software) or a raw logical extent on top of physical media.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_StorageExtent.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_StorageExtent.Access">
            <summary>
            Describes the read/write properties of the media.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_StorageExtent.BlockSize">
            <summary>
            Size, in bytes, of the blocks that form the storage extent. If variable block size, then the maximum block size, in bytes, should be specified. If the block size is unknown, or if a block concept is not valid (for example, for aggregate extents, memory, or logical disks), enter a 1 (one).
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_StorageExtent.ErrorMethodology">
            <summary>
            Free-form string that describes the type of error detection and correction supported by the storage extent.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_StorageExtent.NumberOfBlocks">
            <summary>
            Number of consecutive blocks, each block the size of the value contained in the BlockSize property, that form the storage extent. Total size of the storage extent can be calculated by multiplying the value of the BlockSize property by the value of this property. If the value of BlockSize is 1 (one), this property is the total size of the storage extent.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_StorageExtent.Purpose">
            <summary>
            Free form string that describes the media and its use.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_DiskPartition.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_DiskPartition.Bootable">
            <summary>
            If TRUE, the disk partition is labeled as bootable. This does not mean that an operating system is loaded on the partition.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_DiskPartition.PrimaryPartition">
            <summary>
            If TRUE, the disk partition is labeled as the primary partition for a computer system.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_Fan">
            <summary>
            The CIM_Fan class represents the capabilities and management of a fan cooling device.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_Fan.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="M:WMI.NET.CIM.CIM_Fan.SetSpeed(System.UInt64)">
            <summary>
            The SetSpeed method requests that the fan speed be set to the value specified in the method's input parameter.
            </summary>
            <param name="DesiredSpeed">Requested fan speed, in revolutions per minute.</param>
            <returns></returns>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Fan.DesiredSpeed">
            <summary>
            Requested fan speed, defined in revolutions per minute, when a variable speed fan is supported. The current speed is determined by a sensor (CIM_Tachometer) that is associated with the fan using the CIM_AssociatedSensor relationship.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Fan.VariableSpeed">
            <summary>
            If TRUE, the fan supports variable speeds.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_HeatPipe">
            <summary>
            The CIM_HeatPipe class represents the capabilities and management of a heat pipe cooling device.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_HeatPipe.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="T:WMI.NET.CIM.CIM_IRQ">
            <summary>
            The CIM_IRQ class represents an Intel architecture interrupt request line (IRQ). 
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_SystemResource">
            <summary>
            The CIM_SystemResource class represents an entity managed by BIOS, or an operating system that is available for use by software and logical devices. 
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_SystemResource.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="M:WMI.NET.CIM.CIM_IRQ.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_IRQ.Availability">
            <summary>
            Availability of the IRQ.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_IRQ.CreationClassName">
            <summary>
            Name of the class or subclass used in the creation of an instance. When used with other key properties of the class, this property allows all instances of the class and its subclasses to be uniquely identified.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_IRQ.CSCreationClassName">
            <summary>
            Scoping computer system's creation class name.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_IRQ.CSName">
            <summary>
            Scoping computer system's name.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_IRQ.IRQNumber">
            <summary>
            Part of the object's key value, IRQ number.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_IRQ.Shareable">
            <summary>
            If TRUE, the IRQ can be shared.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_IRQ.TriggerLevel">
            <summary>
            Indicates whether the interruption is triggered by the hardware signal going high or low. 
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_IRQ.TriggerType">
            <summary>
            Type of interruption that can occur.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_Memory">
            <summary>
            The CIM_Memory class represents the capabilities and management of memory-related logical devices.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_Memory.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Memory.AdditionalErrorData">
            <summary>
            Array of octets that hold additional error information. An example is Error Checking and Correcting (ECC) Syndrome, or the return of the check bits if a CRC-based error methodology is used. In the latter case, if a single-bit error is recognized and the CRC algorithm is known, the exact bit that failed can be determined. This type of data (ECC Syndrome, check-bit or parity-bit data, or other vendor supplied information) is included in this field. If the ErrorInfo property is equal to 3 ("OK"), then this property has no meaning. 
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Memory.CorrectableError">
            <summary>
            If TRUE, the most recent error was correctable. If the ErrorInfo property is equal to 3 ("OK"), then this property has no meaning.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Memory.EndingAddress">
            <summary>
            Ending address referenced by an application or operating system and mapped by a memory controller for this memory object. The ending address is specified in kilobytes.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Memory.ErrorAccess">
            <summary>
            Memory access operation that caused the last error. The type of error is described by the ErrorInfo property. If the ErrorInfo property is equal to 3 ("OK"), then this property has no meaning.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Memory.ErrorAddress">
            <summary>
            Address of the last memory error. The type of error is described by the ErrorInfo property. If the ErrorInfo property is equal to 3 ("OK"), then this property has no meaning.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Memory.ErrorData">
            <summary>
            Data captured during the last erroneous memory access. The data occupies the first n octets of the array that are necessary to hold the number of bits specified by the ErrorTransferSize property. If ErrorTransferSize is 0, then this property has no meaning.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Memory.ErrorDataOrder">
            <summary>
            Order of data stored in the ErrorData property. If ErrorTransferSize is 0, then this property has no meaning.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Memory.ErrorInfo">
            <summary>
            Type of error that occurred most recently. The values 12 through 14 are undefined in the CIM schema because DMI mixes the semantics of the error type and whether it was correctable. Whether an error is correctable is indicated in the CorrectableError property.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Memory.ErrorResolution">
            <summary>
            Specifies the range, in bytes, to which the last error can be resolved. For example, if error addresses are resolved to bit 11 (that is, on a typical page basis), then errors can be resolved to 4 KB boundaries and this property is set to 4000. If the ErrorInfo property is equal to 3 ("OK"), then this property has no meaning.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Memory.ErrorTime">
            <summary>
            Date and time that the last memory error occurred. The type of error is described by the ErrorInfo property. If the ErrorInfo property is equal to 3 ("OK"), then this property has no meaning.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Memory.ErrorTransferSize">
            <summary>
            Size of the data transfer, in bits, that caused the last error. A value of 0 indicates no error. If the ErrorInfo property is equal to 3 ("OK"), then this property should be set to 0.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Memory.OtherErrorDescription">
            <summary>
            Free form string that provides information if the ErrorType property is set to 1 ("Other"). If it is not set to 1, then this string has no meaning.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Memory.StartingAddress">
            <summary>
            Beginning address, referenced by an application or operating system and mapped by a memory controller, for this memory object. The starting address is specified in kilobytes.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Memory.SystemLevelAddress">
            <summary>
            Indicates whether the address information in the ErrorAddress property is a system-level address (TRUE) or a physical address (FALSE). If the ErrorInfo property is equal to 3 ("OK"), then this property has no meaning.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_MemoryMappedIO">
            <summary>
            The CIM_MemoryMappedIO class represents computer architecture memory-mapped I/O. This class addresses memory and port I/O resources. 
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_MemoryMappedIO.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_MemoryMappedIO.CreationClassName">
            <summary>
            Name of the class or subclass used in the creation of an instance. When used with other key properties of the class, this property allows all instances of the class and its subclasses to be uniquely identified.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_MemoryMappedIO.CSCreationClassName">
            <summary>
            Scoping computer system's CreationClassName property.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_MemoryMappedIO.CSName">
            <summary>
            Scoping computer system's Name property.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_MemoryMappedIO.EndingAddress">
            <summary>
            Ending address of memory mapped I/O.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_MemoryMappedIO.StartingAddress">
            <summary>
            Starting address of memory mapped I/O. The hardware resource identifier property should be set to this value to construct the mapped I/O resource key.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_NetworkAdapter">
            <summary>
            The CIM_NetworkAdapter class is an abstract class that defines general networking hardware concepts (for example, permanent address or speed of operation). The information is conveyed using the CIM_DeviceSAPImplementation association.
            Network adapters and related endpoints represent the potential for connectivity among peers. The potential for connectivity is significantly different from the master or subordinate and controller or controlled-by relationships of CIM_Controller. Occasionally, however, a single device acts as both a network adapter and a controller, for example, when a fiber channel adapter operates as a computer system's SCSI controller. In which case, aspects of the device are network oriented and others are controller oriented. The controller and adapter classes should be instantiated and a device identity relationship should also be created to link the different aspects of the device.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_NetworkAdapter.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NetworkAdapter.AutoSense">
            <summary>
            If TRUE, the network adapter can automatically determine the speed or other communications characteristics of the attached network media.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NetworkAdapter.MaxSpeed">
            <summary>
            Maximum speed, in bits per second (BPS), for the network adapter.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NetworkAdapter.NetworkAddresses">
            <summary>
            List of network addresses for an adapter.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NetworkAdapter.PermanentAddress">
            <summary>
            Network address hard-coded into an adapter. The hard-coded address can be changed with a firmware upgrade or software configuration. If changed, the field should be updated when the change is made. This property should be left blank if no hard-coded address exists for the network adapter.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NetworkAdapter.Speed">
            <summary>
            Estimate of the current bandwidth, in BPS. For endpoints that vary in bandwidth or for those where no accurate estimation can be made, this property should contain the nominal bandwidth.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_NumericSensor">
            <summary>
            The CIM_NumericSensor class represents a numeric sensor that returns numeric readings and optionally supports thresholds settings.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_Sensor">
            <summary>
            The CIM_Sensor class represents a hardware device that is capable of measuring the characteristics of a physical property (for example, the temperature or voltage characteristics of a unitary computer system).
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_Sensor.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="M:WMI.NET.CIM.CIM_NumericSensor.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NumericSensor.Accuracy">
            <summary>
            Accuracy of the sensor for the measured property. Its value is recorded as plus or minus hundredths of a percent. This property, and the Resolution and Tolerance properties, are used to calculate the actual value of the measured physical property. Accuracy can vary depending on whether the device is linear over its dynamic range.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NumericSensor.CurrentReading">
            <summary>
            Current value indicated by the sensor.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NumericSensor.IsLinear">
            <summary>
            If TRUE, the sensor is linear over its dynamic range.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NumericSensor.LowerThresholdCritical">
            <summary>
            Threshold value that specifies the ranges (minimum and maximum values) for determining whether the sensor is operating under normal, non-critical, critical, or fatal conditions. If the CurrentReading property is between LowerThresholdCritical and LowerThresholdFatal, then the current state is critical.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NumericSensor.LowerThresholdFatal">
            <summary>
            
            Threshold value that specifies the ranges (minimum and maximum values) for determining whether the sensor is operating under normal, non-critical, critical, or fatal conditions. If the CurrentReading property is below LowerThresholdFatal, then the current state is fatal.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NumericSensor.LowerThresholdNonCritical">
            <summary>
            Threshold value that specifies the ranges (minimum and maximum values) for determining whether the sensor is operating under normal, non-critical, critical, or fatal conditions. If the CurrentReading property is between LowerThresholdNonCritical and UpperThresholdNonCritical, then the sensor is reporting a normal value. If the CurrentReading property is between LowerThresholdNonCritical and LowerThresholdCritical, then the current state is non-critical.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NumericSensor.MaxReadable">
            <summary>
            Largest value of the measured property that can be read by the numeric sensor.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NumericSensor.MinReadable">
            <summary>
            Smallest value of the measured property that can be read by the numeric sensor.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NumericSensor.NominalReading">
            <summary>
            Expected or "normal" value for the numeric sensor.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NumericSensor.NormalMax">
            <summary>
            Normal maximum range for the numeric sensor.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NumericSensor.NormalMin">
            <summary>
            Normal minimum range for the numeric sensor.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NumericSensor.Resolution">
            <summary>
            Ability of the sensor to resolve differences in the measured property. This value may vary depending on whether the device is linear over its dynamic range.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NumericSensor.Tolerance">
            <summary>
            Tolerance of the sensor for the measured property. This property, and the Resolution and Accuracy properties, are used to calculate the actual value of the measured physical property. Tolerance may vary depending on whether the device is linear over its dynamic range.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NumericSensor.UpperThresholdCritical">
            <summary>
            Threshold value that specifies the ranges (minimum and maximum values) for determining whether the sensor is operating under normal, non-critical, critical, or fatal conditions. If the CurrentReading property is between UpperThresholdCritical and UpperThresholdFatal, then the current state is critical.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NumericSensor.UpperThresholdFatal">
            <summary>
            Threshold value that specifies the ranges (minimum and maximum values) for determining whether the sensor is operating under normal, non-critical, critical, or fatal conditions. If the CurrentReading property is above UpperThresholdFatal, then the current state is fatal.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_NumericSensor.UpperThresholdNonCritical">
            <summary>
            Threshold value that specifies the ranges (minimum and maximum values) for determining whether the sensor is operating under normal, non-critical, critical, or fatal conditions. If the CurrentReading property is between LowerThresholdNonCritical and UpperThresholdNonCritical, then the sensor is reporting a normal value. If the CurrentReading property is between UpperThresholdNonCritical and UpperThresholdCritical, then the current state is non-critical.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_PCVideoController">
            <summary>
            The CIM_PCVideoController represents the capabilities and management of a personal computer video controller, a subtype of a video controller.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_VideoController">
            <summary>
            The CIM_VideoController class represents the capabilities and management of the video controller.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_VideoController.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_VideoController.AcceleratorCapabilities">
            <summary>
            Graphics and 3-D capabilities of the video controller.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_VideoController.CapabilityDescriptions">
            <summary>
            Free-form strings that provide detailed descriptions for the video accelerator features indicated in the AcceleratorCapabilities array.
            Note   Each entry of this array is related to the entry in the AcceleratorCapabilities array that is located at the same index.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_VideoController.CurrentBitsPerPixel">
            <summary>
            Number of bits used to display each pixel.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_VideoController.CurrentHorizontalResolution">
            <summary>
            Current number of horizontal pixels.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_VideoController.CurrentNumberOfColors">
            <summary>
            Number of colors supported at the current resolution.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_VideoController.CurrentNumberOfColumns">
            <summary>
            If in character mode, number of columns for the video controller; otherwise, enter 0.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_VideoController.CurrentNumberOfRows">
            <summary>
            If in character mode, number of rows for the video controller; otherwise, enter 0.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_VideoController.CurrentRefreshRate">
            <summary>
            Current refresh rate, in hertz.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_VideoController.CurrentScanMode">
            <summary>
            Current scan mode. 
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_VideoController.CurrentVerticalResolution">
            <summary>
            Current number of vertical pixels.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_VideoController.MaxMemorySupported">
            <summary>
            Maximum amount of memory supported, in bytes.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_VideoController.MaxRefreshRate">
            <summary>
            Maximum refresh rate of the video controller, in hertz.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_VideoController.MinRefreshRate">
            <summary>
            Minimum refresh rate of the video controller, in hertz.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_VideoController.NumberOfVideoPages">
            <summary>
            Number of video pages supported given the current resolutions and available memory.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_VideoController.VideoMemoryType">
            <summary>
            Type of video memory.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_VideoController.VideoProcessor">
            <summary>
            Free-form string that describes the video processor or controller.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_PCVideoController.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PCVideoController.NumberOfColorPlanes">
            <summary>
            Current number of color planes. If this value is not applicable for the current video configuration, enter 0.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PCVideoController.VideoArchitecture">
            <summary>
            Video architecture. 
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PCVideoController.VideoMode">
            <summary>
            Current video mode.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_PhysicalMedia">
            <summary>
            The CIM_PhysicalMedia class represents types of documentation and storage medium, such as tapes, CD ROMs, and so on. This class is typically used to locate and manage removable media (versus media sealed with the media access device as a single package, such as hard disks). Sealed media, however, can also be modeled using this class when the media is associated with the physical package using the CIM_PackagedComponent relationship.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_PhysicalMedia.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalMedia.Capacity">
            <summary>
            Number of bytes that can be read from, or written to, a media. This property is not applicable to hard copy (documentation) or cleaner media. Data compression should not be assumed, as it would increase the value in this property. For tapes, it should be assumed that no file marks or blank space areas are recorded on the media.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalMedia.CleanerMedia">
            <summary>
            If TRUE, the physical media is used for cleaning purposes, not data storage.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalMedia.MediaDescription">
            <summary>
            Additional detail related to the MediaType enumeration. For example, if value 3 ("QIC Cartridge") is specified, this property would indicate whether the tape is wide or 1/4 inch, pre-formatted, Travan compatible, and so on.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalMedia.MediaType">
            <summary>
            Type of physical media. The MediaDescription property provides more explicit definition of the media type.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalMedia.WriteProtectOn">
            <summary>
            If TRUE, the media is currently write-protected by a physical mechanism, such as a protect tab on a floppy disk.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_PhysicalMemory">
            <summary>
            The CIM_PhysicalMemory class represents low-level memory devices, such as SIMMS, DIMMs, raw memory chips, and so on. 
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_PhysicalMemory.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalMemory.BankLabel">
            <summary>
            Labeled bank in which the memory is located. For example, "Bank 0" or "Bank A".
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalMemory.Capacity">
            <summary>
            Total capacity of the physical memory, in bytes.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalMemory.DataWidth">
            <summary>
            Data width of the physical memory, in bits. A data width of 0 (zero) , and a total width of 8, indicates that the memory is solely used to provide error correction bits.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalMemory.InterleavePosition">
            <summary>
            Position of the physical memory in an interleave. A value of 0 indicates non-interleaved, 1 indicates the first position, 2 indicates the second position, and so on. For example, in a 2:1 interleave, a value of 1 indicates that the memory is in the even position.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalMemory.MemoryType">
            <summary>
            Type of physical memory.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalMemory.PositionInRow">
            <summary>
            Position of the physical memory in a row. For example, if it takes two 8-bit memory devices to form a 16-bit row, then a value of 2 indicates that the memory is the second device. A value of 0 is an invalid value for this property.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalMemory.Speed">
            <summary>
            Speed of the physical memory, in nanoseconds.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PhysicalMemory.TotalWidth">
            <summary>
            Total width, in bits, of the physical memory, including check or error correction bits. If there are no error correction bits, the value in this property should match that specified for the DataWidth property.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_PointingDevice">
            <summary>
            The CIM_PointingDevice class represents a device that points to regions on the display. Any device that manipulates a pointer, or points to regions on a visual display, is a member of this class. For example, a mouse, stylus, touch pad, or tablet.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_PointingDevice.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PointingDevice.Handedness">
            <summary>
            Configuration of the pointing device for right-hand or left-hand operation. 
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PointingDevice.NumberOfButtons">
            <summary>
            Number of buttons on the pointing device.
            Example: "2"
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PointingDevice.PointingType">
            <summary>
            Type of the pointing device.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_PointingDevice.Resolution">
            <summary>
            Tracking resolution.
            Example: "0"
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_Printer">
            <summary>
            The CIM_Printer class represents the capabilities and management of the printer logical device.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_Printer.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.AvailableJobSheets">
            <summary>
            Describes all of the job sheets that are available on the printer. This can also be used to describe the banner that a printer might provide at the beginning of each job, or can describe other user specified options.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.Capabilities">
            <summary>
            Printer capabilities. 
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.CapabilityDescriptions">
            <summary>
            Free-form strings that provide detailed explanations for any of the printer features indicated in the Capabilities array.
            Note  Each entry of this array is related to the entry in the Capabilities array that is located at the same index.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.CharSetsSupported">
            <summary>
            Available character sets for the output of text related to managing the printer. Strings provided in this property should conform to the semantics and syntax specified by section 4.1.2 ("Charset parameter") in RFC 2046 (MIME Part 2), and contained in the IANA character-set registry. Examples include "utf-8", "us-ascii", and "iso-8859-1". This property was added for Windows XP and later.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.CurrentCapabilities">
            <summary>
            Finishings and other capabilities of the printer that are currently in use. Each entry in this property should also be listed in the Capabilities array.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.CurrentCharSet">
            <summary>
            Current character set used for the output of text relating to management of the printer. The character set described by this property should also be listed in the CharsetsSupported property. The string specified by this property should conform to the semantics and syntax specified by section 4.1.2 ("Charset parameter") in RFC 2046 (MIME Part 2), and contained in the IANA character-set registry. Examples include "utf-8", "us-ascii", and "iso-8859-1".
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.CurrentLanguage">
            <summary>
            Current printer language being used; the language should also be listed in the LanguagesSupported property.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.CurrentMimeType">
            <summary>
            Mime type currently in use by the printer when the CurrentLanguage property is set to indicate that a mime type is in use.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.CurrentNaturalLanguage">
            <summary>
            Current language in use by the printer for management. The language listed here should also be listed in NaturalLanguagesSupported.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.CurrentPaperType">
            <summary>
            Paper type currently in use by the printer. The string should be expressed in the form specified by ISO/IEC 10175 Document Printing Application (DPA), which is also summarized in Appendix C of RFC 1759 (Printer MIB).
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.DefaultCapabilities">
            <summary>
            Default finishings and other capabilities of the printer. Each entry in this property should also be listed in the Capabilities array.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.DefaultCopies">
            <summary>
            Number of copies that a single job will produce, unless otherwise specified.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.DefaultLanguage">
            <summary>
            Default printer language. The language should also be listed in the LanguagesSupported property.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.DefaultMimeType">
            <summary>
            Default mime type used by the printer when the DefaultLanguage property is set to indicate that a mime type is in use.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.DefaultNumberUp">
            <summary>
            Number of print-stream pages that the printer will render onto a single media sheet, unless a job specifies otherwise.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.DefaultPaperType">
            <summary>
            Paper type that the printer will use if PrintJob does not specify a particular type. The string should be expressed in the form specified by ISO/IEC 10175 Document Printing Application (DPA), which is also summarized in Appendix C of RFC 1759 (Printer MIB).
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.DetectedErrorState">
            <summary>
            Printer error information.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.ErrorInformation">
            <summary>
            Array that provides supplemental information for the current error state, indicated in the DetectedErrorState property.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.HorizontalResolution">
            <summary>
            Horizontal resolution in pixels-per-inch.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.JobCountSinceLastReset">
            <summary>
            Printer jobs processed since the last reset. These jobs can be processed from one or more print queues.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.LanguagesSupported">
            <summary>
            Print languages that are natively supported.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.MarkingTechnology">
            <summary>
            Marking technology used by the printer.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.MaxCopies">
            <summary>
            Maximum number of copies that can be produced by the printer from a single job.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.MaxNumberUp">
            <summary>
            Maximum number of print-stream pages that the printer can render onto a single media sheet.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.MaxSizeSupported">
            <summary>
            Largest job (as a byte stream) that the printer will accept in units of kilobytes. A value of 0 (zero) indicates that no limit has been set.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.MimeTypesSupported">
            <summary>
            Free-form strings that provide detailed explanations of mime types that are supported by the printer. If data is provided for this property, then the value 47 ("Mime"), should be included in the LanguagesSupported property.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.NaturalLanguagesSupported">
            <summary>
            Available languages for strings used by the printer for management information output. The strings should conform to RFC 1766. For example, "en" is used for English.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.PaperSizesSupported">
            <summary>
            Types of paper supported.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.PaperTypesAvailable">
            <summary>
            Free-form strings that specify the types of paper that are currently available for the printer. Each string should be expressed in the form specified by ISO/IEC 10175 Document Printing Application (DPA), which is also summarized in Appendix C of RFC 1759 (Printer MIB). Examples of valid strings are "iso-a4-colored" and "na-10x14-envelope". By definition, a paper size that is available and listed in the PaperTypesAvailable property should also appear in the PaperSizesSupported property.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.PrinterStatus">
            <summary>
            Status information, beyond that specified in the Availability property, for a printer.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.TimeOfLastReset">
            <summary>
            Time of last printer reset.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Printer.VerticalResolution">
            <summary>
            Vertical resolution in pixels-per-inch.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_Processor">
            <summary>
            The CIM_Processor class represents the capabilities and management of the processor logical device.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_Processor.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Processor.AddressWidth">
            <summary>
            Processor address width, in bits.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Processor.CurrentClockSpeed">
            <summary>
            Current speed (in megahertz) of the processor.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Processor.DataWidth">
            <summary>
            Processor data width, in bits.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Processor.Family">
            <summary>
            Processor family type.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Processor.LoadPercentage">
            <summary>
            Loading of the processor, averaged over the last minute, in a percentage.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Processor.MaxClockSpeed">
            <summary>
            Maximum speed (in megahertz) of the processor.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Processor.OtherFamilyDescription">
            <summary>
            Description of the processor family type. This property is used when the Family property is set to 1 ("Other"). This string should be set to null when the Family property is a value other than 1.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Processor.Role">
            <summary>
            Free-form string that describes the role of the processor. For example, "Central Processor" or "Math Processor".
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Processor.Stepping">
            <summary>
            Free-form string that indicates the revision level of the processor within the processor family.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Processor.UniqueId">
            <summary>
            Globally unique identifier for the processor. This identifier can only be unique within a processor family.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Processor.UpgradeMethod">
            <summary>
            CPU socket information, which includes data on how to upgrade the processor (if upgrades are supported).
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_RedundancyGroup">
            <summary>
            The CIM_RedundancyGroup class represents a collection of managed system elements, which indicates that the aggregated components, together, provide redundancy. All elements aggregated in a redundancy group should be instantiations of the same object class.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_RedundancyGroup.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_RedundancyGroup.CreationClassName">
            <summary>
            Name of the class or subclass used in the creation of an instance. When used with other key properties of the class, this property allows all instances of the class and its subclasses to be uniquely identified.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_RedundancyGroup.RedundancyStatus">
            <summary>
            Information about the state of the redundancy group.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_Refrigeration">
            <summary>
            The CIM_Refrigeration class represents the capabilities and management of a refrigeration cooling device.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_Refrigeration.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="T:WMI.NET.CIM.CIM_SCSIController">
            <summary>
            The CIM_SCSIController class represents the capabilities and management of the SCSI controller logical device.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_SCSIController.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_SCSIController.ControllerTimeouts">
            <summary>
            Number of SCSI controller time-outs that have occurred since the last reset.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_SCSIController.MaxDataWidth">
            <summary>
            Maximum data width, in bits, supported by the SCSI controller.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_SCSIController.MaxTransferRate">
            <summary>
            Maximum transfer rate, in bits-per-second, supported by the SCSI controller.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_SCSIController.ProtectionManagement">
            <summary>
            Indicates whether the SCSI controller provides redundancy or protection against device failures.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_SerialController">
            <summary>
            The CIM_SerialController class represents the capabilities and management of the serial port logical device.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_SerialController.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_SerialController.Capabilities">
            <summary>
             Chip-level compatibility for the serial controller. This property describes buffering and other capabilities of the serial controller, that may be inherent in the chip hardware. This property is an enumerated integer.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_SerialController.CapabilityDescriptions">
             <summary>
             Free-form strings that provide detailed explanations for the serial controller features indicated in the Capabilities array.
            Note   Each entry of this array is related to the entry in the Capabilities array that is located at the same index.
             </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_SerialController.MaxBaudRate">
            <summary>
            Maximum baud rate, in bits-per-second, supported by the serial controller.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_Service">
            <summary>
            The CIM_Service class represents a logical element that contains information to represent and manage the functionality provided by a device or software feature. A service is a general-purpose object to configure and manage the implementation of functionality; it is not the functionality itself.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_Service.StartService">
            <summary>
             The StartService method puts the service in a started state. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.CIM.CIM_Service.StopService">
            <summary>
            The StopService method stops the service represented by the object derived from CIM_Service.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.CIM.CIM_Service.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Service.CreationClassName">
            <summary>
            Name of the class or subclass used in the creation of an instance. When used with other key properties of the class, this property allows all instances of the class and its subclasses to be uniquely identified.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Service.Started">
            <summary>
            If TRUE, the service has started.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Service.StartMode">
            <summary>
            Indicates whether the service is automatically started (for example, by an operating system) or only started upon request.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Service.SystemCreationClassName">
            <summary>
            Scoping system's creation class name.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Service.SystemName">
            <summary>
            Name of the system that hosts the service.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_ServiceAccessPoint">
            <summary>
            The CIM_ServiceAccessPoint class represents the ability to use or invoke a service. Access points represent services that are available for use by other entities.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_ServiceAccessPoint.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ServiceAccessPoint.CreationClassName">
            <summary>
            Name of the class or subclass used in the creation of an instance. When used with other key properties of the class, this property allows all instances of the class and its subclasses to be uniquely identified.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ServiceAccessPoint.SystemCreationClassName">
            <summary>
            Scoping system's creation class name.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ServiceAccessPoint.SystemName">
            <summary>
            Scoping system's name.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_ServiceAccessPoint.Type">
            <summary>
            Type of SAP, such as attached or redirected.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_Setting">
            <summary>
            The CIM_Setting class represents configuration-related and operational parameters for one or more managed system elements. A managed system element can have multiple setting objects associated with it. The current operational values for an element's parameters are reflected by properties in the element itself or by properties in its associations. These properties do not have to be the same values present in the setting object. For example, a modem may have a setting baud rate of 56 kilobytes per second, but be operating at 19.2 kilobytes per second.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_Setting.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Setting.Caption">
            <summary>
            Short textual description of the CIM_Setting object.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Setting.Description">
            <summary>
            Textual description of the CIM_Setting object.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Setting.SettingID">
            <summary>
            Identifier by which the CIM_Setting object is known.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_SpareGroup">
            <summary>
            The CIM_SpareGroup class is derived from the CIM_RedundancyGroup class and indicates that one or more of the aggregated elements can be spared. Spares are defined using the CIM_ActsAsSpare association. An example of a spare is the use of redundant NICs in a computer system, where one NIC is primary and the other is spare. The primary NIC would be a member of the spare group, associated using the CIM_RedundancyComponent class, and the other NIC would be associated using the CIM_ActsAsSpare relationship.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_SpareGroup.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="T:WMI.NET.CIM.CIM_System">
            <summary>
            The CIM_System class aggregates an enumerable set of managed system elements. The aggregation operates as a functional whole. Within any particular subclass of the system, there is a well-defined list of managed system element classes whose instances must be aggregated.
            The CIM_System object and its derivatives are top-level objects of CIM. They provide the scope for numerous components and are required to have unique system keys.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_System.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_System.CreationClassName">
            <summary>
            Name of the class or subclass used in the creation of an instance. When used with other key properties of the class, this property allows all instances of the class and its subclasses to be uniquely identified.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_System.NameFormat">
            <summary>
            Identifies how the system name was generated, using the subclass heuristic.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_System.PrimaryOwnerContact">
            <summary>
            How the primary system owner can be reached (for example, phone number or email address).
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_System.PrimaryOwnerName">
            <summary>
            Name of the primary system owner.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_System.Roles">
            <summary>
            Roles the system plays in the information technology environment. Subclasses of the system can override this property to define explicit role values. Alternately, a working group can describe the heuristics, conventions, and guidelines for specifying roles. For example, for an instance of a networking system, this property might contain the string "Switch" or "Bridge".
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_TapeDrive">
            <summary>
            The CIM_TapeDrive class represents a tape drive on the system. Tape drives are primarily distinguished in that they can only be accessed sequentially.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_TapeDrive.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_TapeDrive.EOTWarningZoneSize">
            <summary>
            Size, in bytes, of the area designated as end-of-tape. Access in this area generates an end-of-tape warning.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_TapeDrive.MaxPartitionCount">
            <summary>
            Maximum partition count for the tape drive.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_TapeDrive.Padding">
            <summary>
            Number of bytes inserted between blocks on a tape media.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_TemperatureSensor">
            <summary>
            The CIM_TemperatureSensor class exists for backward compatibility with earlier CIM schema definitions. With additions to the CIM_Sensor and CIM_NumericSensor classes in version 2.2, it is no longer necessary. A temperature sensor can be defined by setting the SensorType property, inherited from CIM_Sensor, to 2 ("Temperature"). Other properties of this class are hardcoded as constant values that correspond to definitions in the sensor hierarchy.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_TemperatureSensor.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="T:WMI.NET.CIM.CIM_USBController">
            <summary>
            The CIM_USBController class represents the capabilities and management of a USB controller.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_USBController.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_USBController.Manufacturer">
            <summary>
            Name of the USB controller manufacturer.
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.CoolingDevice.Win32_Fan">
            <summary>
            The Win32_Fan WMI class represents the properties of a fan device in the computer system. For example, the CPU cooling fan.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.CoolingDevice.Win32_Fan.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.CoolingDevice.GetWin32_Fans">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.Abstracts.Win32Collection`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:WMI.NET.Abstracts.Win32Collection`1.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.Abstracts.Win32Collection`1.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="query"></param>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.CoolingDevice.GetWin32_Fans.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.CoolingDevice.GetWin32_Fans.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.CoolingDevice.Win32_HeatPipe">
            <summary>
            The Win32_HeatPipe WMI class represents the properties of a heat pipe cooling device.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.CoolingDevice.Win32_HeatPipe.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.CoolingDevice.GetWin32_HeatPipes">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.CoolingDevice.GetWin32_HeatPipes.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.CoolingDevice.GetWin32_HeatPipes.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.CoolingDevice.Win32_Refrigeration">
            <summary>
            The Win32_Refrigeration WMI class represents the properties of a refrigeration device.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.CoolingDevice.Win32_Refrigeration.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.CoolingDevice.GetWin32_Refrigerations">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.CoolingDevice.GetWin32_Refrigerations.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.CoolingDevice.GetWin32_Refrigerations.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.CoolingDevice.Win32_TemperatureProbe">
            <summary>
            The Win32_TemperatureProbe  WMI class represents the properties of a temperature sensor (electronic thermometer).
            Most of the information that the Win32_TemperatureProbe WMI class provides comes from SMBIOS. Real-time readings for the CurrentReading property cannot be extracted from SMBIOS tables. For this reason, current implementations of WMI do not populate the CurrentReading property. The CurrentReading property's presence is reserved for future use. 
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.CoolingDevice.Win32_TemperatureProbe.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.CoolingDevice.GetWin32_TemperatureProbes">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.CoolingDevice.GetWin32_TemperatureProbes.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.CoolingDevice.GetWin32_TemperatureProbes.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.InputDevice.Win32_Keyboard">
            <summary>
            The Win32_Keyboard WMI class represents a keyboard installed on a computer system running Windows.
            </summary>
        </member>
        <member name="T:WMI.NET.CIM.CIM_Keyboard">
            <summary>
            The CIM_Keyboard class represents the capabilities and management of the keyboard logical device.
            </summary>
        </member>
        <member name="M:WMI.NET.CIM.CIM_Keyboard.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Keyboard.Layout">
            <summary>
            Free-form string that indicates the format and layout of the keyboard.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Keyboard.NumberOfFunctionKeys">
            <summary>
            Number of function keys on the keyboard.
            </summary>
        </member>
        <member name="P:WMI.NET.CIM.CIM_Keyboard.Password">
            <summary>
            Integer that indicates whether a hardware-level password is enabled on the keyboard to prevent local input. 
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.InputDevice.Win32_Keyboard.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.InputDevice.GetWin32_Keyboards">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.InputDevice.GetWin32_Keyboards.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.InputDevice.GetWin32_Keyboards.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.InputDevice.Win32_PointingDevice">
            <summary>
            The Win32_PointingDevice WMI class represents an input device used to point to and select regions on the display of a computer system running Windows. Any device used to manipulate a pointer, or point to the display on a computer system running Windows is a member of this class.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.InputDevice.Win32_PointingDevice.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.InputDevice.Win32_PointingDevice.DeviceInterface">
            <summary>
            Type of interface used for the pointing device.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.InputDevice.Win32_PointingDevice.DoubleSpeedThreshold">
            <summary>
            One of two acceleration values. The sensitivity of the pointing device doubles (toggles from the first to the second value) when the pointing device moves a distance greater than this threshold value.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.InputDevice.Win32_PointingDevice.HardwareType">
            <summary>
            Type of hardware used for the Windows pointing device.
            Example: "MICROSOFT PS2 MOUSE"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.InputDevice.Win32_PointingDevice.InfFileName">
            <summary>
            Name of the .inf file for the Windows pointing device.
            Example: "ab.inf"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.InputDevice.Win32_PointingDevice.InfSection">
            <summary>
            Section of the .inf file that holds configuration information for the Windows pointing device.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.InputDevice.Win32_PointingDevice.Manufacturer">
            <summary>
            Name of the processor's manufacturer.
            Example: "GenuineSilicon"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.InputDevice.Win32_PointingDevice.QuadSpeedThreshold">
            <summary>
            One of two acceleration threshold values. The system doubles the speed of the pointer movement when the pointer device moves a distance greater than this value. Because this speed increase occurs after the DoubleSpeedThreshold value has been met, the pointer effectively moves at four times its original speed.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.InputDevice.Win32_PointingDevice.SampleRate">
            <summary>
            Rate at which the pointing device is polled for input information.(Hertz) 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.InputDevice.Win32_PointingDevice.Synch">
            <summary>
            Length of time after which the next interrupt is assumed to indicate the start of a new device packet (partial packets are discarded). In the event that an interrupt is lost, this allows the pointing device driver to synchronize its internal representation of the packet state with the hardware state.(100 Nanoseconds) 
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.InputDevice.GetWin32_PointingDevices">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.InputDevice.GetWin32_PointingDevices.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.InputDevice.GetWin32_PointingDevices.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MassStorage.Win32_AutochkSetting">
            <summary>
            The Win32_AutochkSetting WMI class represents the settings for the autocheck operation of a disk.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MassStorage.Win32_AutochkSetting.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_AutochkSetting.UserInputDelay">
            <summary>
            User input delay for autocheck.(Seconds) 
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MassStorage.GetWin32_AutochkSettings">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MassStorage.GetWin32_AutochkSettings.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MassStorage.GetWin32_AutochkSettings.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive">
            <summary>
            The Win32_CDROMDrive WMI class represents a CD-ROM drive on a computer system running Windows. Be aware that the name of the drive does not correspond to the logical drive letter assigned to the device.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.Drive">
            <summary>
            Drive letter of the CD-ROM drive.
            Example: "d:\"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.DriveIntegrity">
            <summary>
            If True, files can be accurately read from the CD device. This is achieved by reading a block of data twice and comparing the data against itself.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.FileSystemFlags">
            <summary>
            This property is obsolete. In place of this property, use FileSystemFlagsEx.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.FileSystemFlagsEx">
            <summary>
            File system flags associated with the Windows CD-ROM drive. This parameter can be any combination of flags, but FS_FILE_COMPRESSION and FS_VOL_IS_COMPRESSED are mutually exclusive.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.Id">
            <summary>
            Drive letter that uniquely identifies this CD-ROM drive.
            Example: "d:\"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.Manufacturer">
            <summary>
            Manufacturer of the Windows CD-ROM drive.
            Example: "PLEXTOR"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.MaximumComponentLength">
            <summary>
            Maximum length of a filename component supported by the Windows CD-ROM drive. A file name component the portion of a file name between backslashes. The value can be used to indicate that long names are supported by the specified file system. For example, for a FAT file system supporting long names, the function stores the value 255, rather than the previous 8.3 indicator. Long names can also be supported on systems that use the NTFS file system.
            Example: 255
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.MediaLoaded">
            <summary>
            If True, a CD-ROM is in the drive.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.MediaType">
            <summary>
            Type of media that can be used or accessed by this device.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.MfrAssignedRevisionLevel">
            <summary>
            Firmware revision level that is assigned by the manufacturer.
            Windows Server 2003 and Windows XP:  This property is not available.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.RevisionLevel">
            <summary>
            Firmware revision level of the Windows CD-ROM drive.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.SCSIBus">
            <summary>
            SCSI bus number for the disk drive.
            Example: 0
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.SCSILogicalUnit">
            <summary>
            SCSI logical unit number (LUN) of the disk drive. The LUN is used to designate which SCSI controller is being accessed in a system with more than one controller being used. The SCSI device identifier is similar, but is the designation for multiple devices on one controller.
            Example: 0
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.SCSIPort">
            <summary>
            SCSI port number of the disk drive.
            Example: 1
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.SCSITargetId">
            <summary>
            SCSI identifier number of the Windows CD-ROM drive.
            Example: 0
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.SerialNumber">
            <summary>
            Number supplied by the manufacturer that identifies the physical media. Example: WD-WM3493798728.
            Windows Server 2003 and Windows XP:  This property is not available. 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.Size">
            <summary>
            Size of the disk drive.(Bytes) 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.TransferRate">
            <summary>
            Transfer rate of the CD-ROM drive. A value of -1 indicates that the rate cannot be determined. When this happens, the CD is not in the drive. (KiloBytes per Second) 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.VolumeName">
            <summary>
            Volume name of the Windows CD-ROM drive.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_CDROMDrive.VolumeSerialNumber">
            <summary>
            Volume serial number of the media in the CD-ROM drive.
            Example: A8C3-D032
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MassStorage.GetWin32_CDROMDrives">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MassStorage.GetWin32_CDROMDrives.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MassStorage.GetWin32_CDROMDrives.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive">
            <summary>
            The Win32_DiskDrive WMI class represents a physical disk drive as seen by a computer running the Windows operating system. Any interface to a Windows physical disk drive is a descendent (or member) of this class. The features of the disk drive seen through this object correspond to the logical and management characteristics of the drive. In some cases, this may not reflect the actual physical characteristics of the device. Any object based on another logical device would not be a member of this class.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.BytesPerSector">
            <summary>
            Number of bytes in each sector for the physical disk drive.
            Example: 512
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.FirmwareRevision">
            <summary>
            Revision for the disk drive firmware that is assigned by the manufacturer.
            Windows Server 2003 and Windows XP:  This property is not available. 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.Index">
            <summary>
            Physical drive number of the given drive. This property is filled by the GetDriveMapInfo method. A value of 0xFF indicates that the given drive does not map to a physical drive.
            Example: 1
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.InterfaceType">
            <summary>
            Interface type of physical disk drive. 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.Manufacturer">
            <summary>
            Name of the disk drive manufacturer.
            Example: "Seagate"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.MediaLoaded">
            <summary>
            If True, the media for a disk drive is loaded, which means that the device has a readable file system and is accessible. For fixed disk drives, this property will always be TRUE.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.MediaType">
            <summary>
            Type of media used or accessed by this device. 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.Model">
            <summary>
            Manufacturer's model number of the disk drive.
            Example: "ST32171W"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.Partitions">
            <summary>
            Number of partitions on this physical disk drive that are recognized by the operating system.
            Example: 2
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.SCSIBus">
            <summary>
            SCSI bus number of the disk drive.
            Example: 0
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.SCSILogicalUnit">
            <summary>
            SCSI logical unit number (LUN) of the disk drive.
            Example: 0
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.SCSIPort">
            <summary>
            SCSI port number of the disk drive.
            Example: 0
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.SCSITargetId">
            <summary>
            SCSI identifier number of the disk drive.
            Example: 0
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.SectorsPerTrack">
            <summary>
            Number of sectors in each track for this physical disk drive.
            Example: 63
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.SerialNumber">
            <summary>
            Number allocated by the manufacturer to identify the physical media.
            Example: WD-WM3493798728
            Windows Server 2003 and Windows XP:  This property is not available. 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.Signature">
            <summary>
            Disk identification. This property can be used to identify a shared resource. This property has been added for Windows XP.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.Size">
            <summary>
            Size of the disk drive. It is calculated by multiplying the total number of cylinders, tracks in each cylinder, sectors in each track, and bytes in each sector.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.TotalCylinders">
            <summary>
            Total number of cylinders on the physical disk drive. Note: the value for this property is obtained through extended functions of BIOS interrupt 13h. The value may be inaccurate if the drive uses a translation scheme to support high-capacity disk sizes. Consult the manufacturer for accurate drive specifications.
            Example: 657
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.TotalHeads">
            <summary>
            Total number of heads on the disk drive. Note: the value for this property is obtained through extended functions of BIOS interrupt 13h. The value may be inaccurate if the drive uses a translation scheme to support high-capacity disk sizes. Consult the manufacturer for accurate drive specifications.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.TotalSectors">
            <summary>
            Total number of sectors on the physical disk drive. Note: the value for this property is obtained through extended functions of BIOS interrupt 13h. The value may be inaccurate if the drive uses a translation scheme to support high-capacity disk sizes. Consult the manufacturer for accurate drive specifications.
            Example: 2649024
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.TotalTracks">
            <summary>
            Total number of tracks on the physical disk drive. Note: the value for this property is obtained through extended functions of BIOS interrupt 13h. The value may be inaccurate if the drive uses a translation scheme to support high-capacity disk sizes. Consult the manufacturer for accurate drive specifications.
            Example: 42048
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_DiskDrive.TracksPerCylinder">
            <summary>
            Number of tracks in each cylinder on the physical disk drive. Note: the value for this property is obtained through extended functions of BIOS interrupt 13h. The value may be inaccurate if the drive uses a translation scheme to support high-capacity disk sizes. Consult the manufacturer for accurate drive specifications.
            Example: 64
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MassStorage.GetWin32_DiskDrives">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MassStorage.GetWin32_DiskDrives.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MassStorage.GetWin32_DiskDrives.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MassStorage.Win32_FloppyDrive">
            <summary>
            The Win32_FloppyDrive WMI class manages the functions of a floppy disk drive.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MassStorage.Win32_FloppyDrive.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_FloppyDrive.Manufacturer">
            <summary>
            Name of the manufacturer of the floppy disk drive.
            Example: "Acme"
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MassStorage.GetWin32_FloppyDrives">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MassStorage.GetWin32_FloppyDrives.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MassStorage.GetWin32_FloppyDrives.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MassStorage.Win32_PhysicalMedia">
            <summary>
            The Win32_PhysicalMedia class represents any type of documentation or storage medium, such as tapes, CD ROMs, and so on. To obtain the characteristics of the media in a CD drive, such as whether it is writeable, use Win32_CDROMDrive and the Capabilities property.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MassStorage.Win32_PhysicalMedia.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MassStorage.GetWin32_PhysicalMedia">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MassStorage.GetWin32_PhysicalMedia.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MassStorage.GetWin32_PhysicalMedia.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MassStorage.Win32_TapeDrive">
            <summary>
            The Win32_TapeDrive WMI class represents a tape drive on a computer system running Windows. Tape drives are primarily distinguished by the fact that they can only be accessed sequentially.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MassStorage.Win32_TapeDrive.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_TapeDrive.Compression">
            <summary>
            If TRUE, hardware data compression is enabled.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_TapeDrive.ECC">
            <summary>
            If TRUE, the device supports hardware error correction.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_TapeDrive.FeaturesHigh">
            <summary>
            High-order 32 bits of the device features flag.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_TapeDrive.FeaturesLow">
            <summary>
            Low-order 32 bits of the device features flag.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_TapeDrive.Id">
            <summary>
            Manufacturer's identifying name of the Windows CD ROM drive.
            Example: "PLEXTOR CD-ROM PX-12CS 1.01"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_TapeDrive.Manufacturer">
            <summary>
            Manufacturer of the Windows CD-ROM drive.
            Example: "PLEXTOR"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_TapeDrive.MediaType">
            <summary>
            Media type used by (or accessed by) this device. In this case, it is set to "Tape Drive".
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MassStorage.Win32_TapeDrive.ReportSetMarks">
            <summary>
            If TRUE, setmark reporting is enabled. Setmark reporting makes use of a specialized recorded element that does not contain user data. This recorded element is used to provide a segmentation scheme that is hierarchically superior to filemarks. Setmarks provide faster positioning on high-capacity tapes.
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MassStorage.GetWin32_TapeDrives">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MassStorage.GetWin32_TapeDrives.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MassStorage.GetWin32_TapeDrives.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_1394Controller">
            <summary>
            The Win32_1394Controller WMI class represents the capabilities and management of a 1394 controller. IEEE 1394 is a specification for a high-speed serial bus.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_1394Controller.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_1394Controller.Manufacturer">
            <summary>
            Manufacturer of the controller.
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_1394Controllers">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_1394Controllers.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_1394Controllers.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_1394ControllerDevice">
            <summary>
            The Win32_1394ControllerDevice association WMI class relates the high-speed serial bus (IEEE 1394 Firewire) Controller and the CIM_LogicalDevice instance connected to it. This serial bus provides enhanced connectivity for a wide range of devices, including consumer audio or video components, storage peripherals, other computers, and portable devices. IEEE 1394 has been adopted by the consumer electronics industry and provides a Plug and Play-compatible expansion interface.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_1394ControllerDevice.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_1394ControllerDevices">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_1394ControllerDevices.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_1394ControllerDevices.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_AllocatedResource">
            <summary>
            The Win32_AllocatedResource association WMI class relates a logical device to a system resource. This class is used to discover which resources, such as IRQs or DMA channels, are in use by a specific device.
            This class is obsolete. In place of this class, you should use the properties in the Win32_PNPAllocatedResource class.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_AllocatedResource.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_AllocatedResource.Antecedent">
            <summary>
            Reference to the CIM_SystemResource instance representing the properties of a system resource available to the logical device. This property is inherited from CIM_Dependency.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_AllocatedResource.Dependent">
            <summary>
            Reference to the CIM_LogicalDevice instance representing the properties of the logical device that is using the system resources assigned to it. This property is inherited from CIM_Dependency.
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_AllocatedResources">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_AllocatedResources.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_AllocatedResources.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_BIOS">
            <summary>
             The Win32_BIOS WMI class represents the attributes of the computer system's basic input/output services (BIOS) that are installed on a computer. 
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_BIOS.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_BIOS.BiosCharacteristics">
            <summary>
            Array of BIOS characteristics supported by the system as defined by the System Management BIOS Reference Specification.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_BIOS.BIOSVersion">
            <summary>
            Windows Server 2003 and Windows XP:  Array of the complete system BIOS information. In many computers there can be several version strings that are stored in the registry and represent the system BIOS information.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_BIOS.CurrentLanguage">
            <summary>
            Name of the current BIOS language.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_BIOS.InstallableLanguages">
            <summary>
            Number of languages available for installation on this system. Language may determine properties such as the need for Unicode and bidirectional text.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_BIOS.ListOfLanguages">
            <summary>
            Array of names of available BIOS-installable languages.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_BIOS.ReleaseDate">
            <summary>
            Release date of the Windows BIOS in the Coordinated Universal Time (UTC) format of YYYYMMDDHHMMSS.MMMMMM(+-)OOO.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_BIOS.SMBIOSBIOSVersion">
            <summary>
            BIOS version as reported by SMBIOS.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_BIOS.SMBIOSMajorVersion">
            <summary>
            Major SMBIOS version number. This property is NULL if SMBIOS is not found.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_BIOS.SMBIOSMinorVersion">
            <summary>
            Minor SMBIOS version number. This property is NULL if SMBIOS is not found.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_BIOS.SMBIOSPresent">
            <summary>
            If true, the SMBIOS is available on this computer system.
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_BIOS">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_BIOS.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_BIOS.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_DeviceMemoryAddress">
            <summary>
            The Win32_DeviceMemoryAddress WMI class represents a device memory address on a computer system running Windows.
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SystemMemoryResource">
            <summary>
            The Win32_SystemMemoryResource abstract WMI class represents a system memory resource on a computer system running Windows.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SystemMemoryResource.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_DeviceMemoryAddress.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_DeviceMemoryAddress.MemoryType">
            <summary>
            Characteristics of the memory resource on the computer system running Windows. Values are the following.
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_DeviceMemoryAddresses">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_DeviceMemoryAddresses.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_DeviceMemoryAddresses.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_IDEController">
            <summary>
            The Win32_IDEController WMI class manages the capabilities of an integrated device electronics (IDE) controller device.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_IDEController.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_IDEController.Manufacturer">
            <summary>
            Manufacturer of the IDE controller device.
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_IDEControllers">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_IDEControllers.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_IDEControllers.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_IRQResource">
            <summary>
            The Win32_IRQResource  WMI class represents an interrupt request line (IRQ) number on a computer system running Windows. An interrupt request is a signal sent to the CPU by a device or program for time critical events. IRQ can be hardware-based or software-based.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_IRQResource.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_IRQResource.Hardware">
            <summary>
            If TRUE, the interrupt is hardware or software based. A hardware IRQ is a physical wire from the peripheral to the programmable interrupt controller (PIC) chip through which the CPU can be notified of time-critical events. Some IRQ lines are reserved for standard devices, such as the keyboard, floppy disk drives, and the system clock. A software interrupt allows applications to get the attention of the processor.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_IRQResource.Vector">
            <summary>
            Vector of the Windows IRQ resource. A vector contains the memory address to the function that will execute once the interrupt request is acknowledged by the CPU.
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_IRQResources">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_IRQResources.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_IRQResources.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_MotherboardDevice">
            <summary>
            The Win32_MotherboardDevice WMI class represents a device that contains the central components of the Windows computer system.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_MotherboardDevice.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_MotherboardDevice.PrimaryBusType">
            <summary>
            Primary bus type of the motherboard.
            Example: "PCI"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_MotherboardDevice.RevisionNumber">
            <summary>
            Revision number of the motherboard.
            Example: "00"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_MotherboardDevice.SecondaryBusType">
            <summary>
            Secondary bus type of the motherboard.
            Example: "ISA"
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_MotherboardDevices">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_MotherboardDevices.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_MotherboardDevices.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_OnBoardDevice">
            <summary>
            The Win32_OnBoardDevice WMI class represents common adapter devices built into the motherboard (system board).
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_OnBoardDevice.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_OnBoardDevice.DeviceType">
            <summary>
            Type of device being represented.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_OnBoardDevice.Enabled">
            <summary>
            If TRUE, the on-board device is available for use. 
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_OnBoardDevices">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_OnBoardDevices.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_OnBoardDevices.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_PhysicalMemory">
            <summary>
            The Win32_PhysicalMemory WMI class represents a physical memory device located on a computer system and available to the operating system.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_PhysicalMemory.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_PhysicalMemory.DeviceLocator">
            <summary>
            Label of the socket or circuit board that holds the memory.
            Example: "SIMM 3"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_PhysicalMemory.InterleaveDataDepth">
            <summary>
            Unsigned 16-bit integer maximum number of consecutive rows of data that are accessed in a single interleaved transfer from the memory device. If the value is 0 (zero), the memory is not interleaved.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_PhysicalMemory.TypeDetail">
            <summary>
            Type of physical memory represented.
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_PhysicalMemories">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_PhysicalMemories.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_PhysicalMemories.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_PnPAllocatedResource">
            <summary>
            The Win32_PnPAllocatedResource association WMI class represents an association between logical devices and system resources. This class is used to discover the resources that are in-use by a specific device, such as an Interrupt ReQuest (IRQ) or a Direct Memory Access (DMA) channel. 
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_PnPAllocatedResource.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_PnPAllocatedResources">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_PnPAllocatedResources.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_PnPAllocatedResources.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_PortResource">
            <summary>
            The Win32_PortResource WMI class represents an I/O port on a computer system running Windows.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_PortResource.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_PortResource.Alias">
            <summary>
            If TRUE, this instance represents one of the ranges with an alias. If FALSE, the instance represents a base port address. A base port address is a predetermined port address dedicated to a specific service or device. A port alias address is one that a device responds to as if it were the actual address of an I/O port.
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_PortResources">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_PortResources.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_PortResources.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SCSIController">
            <summary>
            The Win32_SCSIController WMI class represents a SCSI controller on a computer system running Windows.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SCSIController.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SCSIController.DeviceMap">
            <summary>
            Order in which the devices are listed with this SCSI controller.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SCSIController.DriverName">
            <summary>
            Driver file name of the SCSI controller.
            Example: "Adaptec"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SCSIController.HardwareVersion">
            <summary>
            Hardware version number of the SCSI controller.
            Example: "1.25"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SCSIController.Index">
            <summary>
            Index number of the SCSI controller in the system registry.
            Example: 0
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SCSIController.Manufacturer">
            <summary>
            Name of the SCSI controller manufacturer.
            Example: "Adaptec"
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_SCSIControllers">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_SCSIControllers.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_SCSIControllers.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_SystemMemoryResources">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_SystemMemoryResources.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_SystemMemoryResources.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.Printing.Win32_DriverForDevice">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.Printing.Win32_DriverForDevice.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_DriverForDevice.Antecedent">
            <summary>
            Reference to the Win32_Printer instance that represents the printer.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_DriverForDevice.Dependent">
            <summary>
            Reference to the Win32_PrinterDriver instance that represents the printer driver for the printer.
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.Printing.GetWin32_DriverForDevices">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.Printing.GetWin32_DriverForDevices.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.Printing.GetWin32_DriverForDevices.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.Printing.Win32_PrinterDriver">
            <summary>
            The Win32_PrinterDriver WMI class represents the drivers for a Win32_Printer instance. 
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.Printing.Win32_PrinterDriver.AddPrinterDriver(WMI.NET.ComputerSystemHardware.Printing.Win32_PrinterDriver)">
            <summary>
            The AddPrinterDriver class method creates a new printer driver.
            Note  When using the AddPrinterDriver method you must use SeLoadDriverPrivilege to load or unload a device driver.
            </summary>
            <param name="DriverInfo">Information needed to create the printer driver.</param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.Printing.Win32_PrinterDriver.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_PrinterDriver.ConfigFile">
            <summary>
            Configuration file for this printer driver.
            Example: "pscrptui.dll"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_PrinterDriver.DataFile">
            <summary>
            Data file for this printer driver.
            Example: "qms810.ppd"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_PrinterDriver.DefaultDataType">
            <summary>
            Default data type for this printer driver.
            Example: "EMF"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_PrinterDriver.DependentFiles">
            <summary>
            Array of dependent files for this printer driver.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_PrinterDriver.DriverPath">
            <summary>
            Path for this printer driver.
            Example: "C:\\drivers\\pscript.dll"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_PrinterDriver.FilePath">
            <summary>
            Path to the INF file being used.
            Example: "c:\\temp\\driver"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_PrinterDriver.HelpFile">
            <summary>
            Help file for this printer driver.
            Example: "pscrptui.hlp"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_PrinterDriver.InfName">
            <summary>
            Name of the INF file being used. The default is to use an operating system provided printer INF file. A different file name is used if the driver is provided directly by the manufacturer of the printer and not the operating system.
            Windows Server 2003 and Windows XP:  The default name is "ntprint.inf".
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_PrinterDriver.MonitorName">
            <summary>
            Name of the monitor for this printer driver.
            Example: "PJL monitor"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_PrinterDriver.OEMUrl">
            <summary>
            World Wide Web (WWW) link to the printer manufacturer's website. Note that this property is not populated when the Win32.inf file is used, and is only applicable for drivers provided directly from the manufacturer.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_PrinterDriver.SupportedPlatform">
            <summary>
            Operating environments that the driver is intended for.
            Example: "Windows NT x86".
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_PrinterDriver.Version">
            <summary>
            Operating system version for the printer driver.
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.Printing.GetWin32_PrinterDrivers">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.Printing.GetWin32_PrinterDrivers.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.Printing.GetWin32_PrinterDrivers.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort">
            <summary>
            The Win32_SerialPort WMI class represents a serial port on a computer system running Windows.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.Binary">
            <summary>
            If TRUE, the serial port is configured for binary data transfer. Because the Windows API does not support nonbinary mode transfers, this property must be TRUE.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.MaximumInputBufferSize">
            <summary>
            Maximum size of the serial port driver's internal input buffer. A value of 0 (zero) indicates that no maximum value is imposed by the serial provider.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.MaximumOutputBufferSize">
            <summary>
            Maximum size of the serial port driver's internal output buffer. A value of 0 (zero) indicates that no maximum value is imposed by the serial provider.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.OSAutoDiscovered">
            <summary>
            If TRUE, the instances of this class were automatically discovered by the operating system. If, for example, hardware was added through Control Panel, the operating system finds instances of this class by querying hardware from the instances of this class.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.ProviderType">
            <summary>
            Communications provider type. 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.SettableBaudRate">
            <summary>
            If TRUE, the baud rate can be changed for this serial port.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.SettableDataBits">
            <summary>
            If TRUE, data bits can be set for this serial port.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.SettableFlowControl">
            <summary>
            If TRUE, flow control can be set for this serial port.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.SettableParity">
            <summary>
            If TRUE, parity can be set for this serial port.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.SettableParityCheck">
            <summary>
            If TRUE, parity checking can be set for this serial port (if parity checking is supported).
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.SettableRLSD">
            <summary>
            If TRUE, Received Line Signal Detect (RLSD) can be set for this serial port (if RLSD is supported).
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.SettableStopBits">
            <summary>
            If TRUE, stop bits can be set for this serial port.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.Supports16BitMode">
            <summary>
            If TRUE, 16-bit mode is supported on this serial port.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.SupportsDTRDSR">
            <summary>
            If TRUE, data terminal ready (DTR) and data set ready (DSR) signals are supported on this serial port.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.SupportsElapsedTimeouts">
            <summary>
            If TRUE, elapsed time-outs are supported on this serial port. Elapsed timeouts track the total amount of time between data transmissions.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.SupportsIntTimeouts">
            <summary>
            If TRUE, interval time-outs are supported. An interval timeout is the amount of time allowed to elapse between the arrival of each piece of data.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.SupportsParityCheck">
            <summary>
            If TRUE, parity checking is supported on this serial port.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.SupportsRLSD">
            <summary>
            If TRUE, Received Line Signal Detect (RLSD) is supported on this serial port.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.SupportsRTSCTS">
            <summary>
            If TRUE, ready to send (RTS) and clear to send (CTS) signals are supported on this serial port.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.SupportsSpecialCharacters">
            <summary>
            If TRUE, serial port control characters are supported. These characters signal events rather than data. These characters are not displayable and are set by the driver. They include EofChar, ErrorChar, BreakChar, EventChar, XonChar, and XoffChar.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.SupportsXOnXOff">
            <summary>
            If TRUE, XON or XOFF flow-control is supported on this serial port.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_SerialPort.SupportsXOnXOffSet">
            <summary>
            If TRUE, the communications provider supports configuration of the XONor XOFF flow-control setting.
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_SerialPorts">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_SerialPorts.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_SerialPorts.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_USBController">
            <summary>
            The Win32_USBController WMI class manages the capabilities of a universal serial bus (USB) controller.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.Win32_USBController.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_USBControllers">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_USBControllers.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.MotherboardControllerPort.GetWin32_USBControllers.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.NetworkingDevice.Win32_NetworkAdapter">
            <summary>
             The Win32_NetworkAdapter class is deprecated. Use the MSFT_NetAdapter class instead. The Win32_NetworkAdapter WMI class represents a network adapter of a computer running a Windows operating system.
            Win32_NetworkAdapter only supplies IPv4 data. For more information, see IPv6 and IPv4 Support in WMI.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.NetworkingDevice.Win32_NetworkAdapter.Disable">
            <summary>
            The Disable method disables the network adapter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.NetworkingDevice.Win32_NetworkAdapter.Enable">
            <summary>
            The Enable method enables the network adapter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.NetworkingDevice.Win32_NetworkAdapter.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.NetworkingDevice.Win32_NetworkAdapter.AdapterType">
            <summary>
            Network medium in use.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.NetworkingDevice.Win32_NetworkAdapter.AdapterTypeID">
            <summary>
            Network medium in use. Returns the same information as the AdapterType property, except that the information is in the form of an integer. 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.NetworkingDevice.Win32_NetworkAdapter.GUID">
            <summary>
            Globally unique identifier for the connection.
            Windows Server 2003 and Windows XP:  This property is not available. 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.NetworkingDevice.Win32_NetworkAdapter.Index">
            <summary>
            Index number of the network adapter, stored in the system registry.
            Example: 0
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.NetworkingDevice.Win32_NetworkAdapter.Installed">
            <summary>
            If True, the network adapter is installed in the system.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.NetworkingDevice.Win32_NetworkAdapter.InterfaceIndex">
            <summary>
            Index value that uniquely identifies the local network interface. The value in this property is the same as the value in the InterfaceIndex property in the instance of Win32_IP4RouteTable that represents the network interface in the route table.
            Windows XP:  This property is not available. 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.NetworkingDevice.Win32_NetworkAdapter.MACAddress">
            <summary>
            Media access control address for this network adapter. A MAC address is a unique 48-bit number assigned to the network adapter by the manufacturer. It uniquely identifies this network adapter and is used for mapping TCP/IP network communications.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.NetworkingDevice.Win32_NetworkAdapter.Manufacturer">
            <summary>
            Name of the network adapter's manufacturer.
            Example: "3COM"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.NetworkingDevice.Win32_NetworkAdapter.MaxNumberControlled">
            <summary>
            Maximum number of directly addressable ports supported by this network adapter. A value of 0 (zero) should be used if the number is unknown.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.NetworkingDevice.Win32_NetworkAdapter.NetConnectionID">
            <summary>
            Name of the network connection as it appears in the Network Connections Control Panel program.
            Windows Server 2003 and Windows XP:  This property is read-only.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.NetworkingDevice.Win32_NetworkAdapter.NetConnectionStatus">
            <summary>
             State of the network adapter connection to the network.
            Windows XP with SP3 and later:  This property returns a value of 2 for a client that is connected to an authenticated port.
            Windows XP with SP2 and earlier:  This property returns a value of 9 for a client that is connected to an authenticated port.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.NetworkingDevice.Win32_NetworkAdapter.NetEnabled">
            <summary>
            Indicates whether the adapter is enabled or not. If True, the adapter is enabled. You can enable or disable the NIC by using the Enable and Disable methods.
            Windows Server 2003 and Windows XP:  This property is not available. 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.NetworkingDevice.Win32_NetworkAdapter.PhysicalAdapter">
            <summary>
            Indicates whether the adapter is a physical or a logical adapter. If True, the adapter is physical.
            Windows Server 2003 and Windows XP:  This property is not available. 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.NetworkingDevice.Win32_NetworkAdapter.ProductName">
            <summary>
            Product name of the network adapter.
            Example: "Fast EtherLink XL"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.NetworkingDevice.Win32_NetworkAdapter.ServiceName">
            <summary>
            Service name of the network adapter. This name is usually shorter than the full product name.
            Example: "Elnkii"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.NetworkingDevice.Win32_NetworkAdapter.TimeOfLastReset">
            <summary>
            Date and time the network adapter was last reset.
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.NetworkingDevice.GetWin32_NetworkAdapters">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.NetworkingDevice.GetWin32_NetworkAdapters.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.NetworkingDevice.GetWin32_NetworkAdapters.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer">
            <summary>
            The Win32_Printer WMI class represents a device connected to a computer running on a Microsoft Windows operating system that can produce a printed image or text on paper or other medium.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.AddPrinterConnection(System.String)">
            <summary>
            The AddPrinterConnection WMI class method provides a connection to an existing printer on the network, and adds it to the list of available printers.
            </summary>
            <param name="Name">Friendly name for the printer.</param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.CancelAllJobs">
            <summary>
            The CancelAllJobs WMI class method removes all jobs, including the one currently printing from the queue.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.Pause">
            <summary>
            The Pause WMI class method pauses the print queue. No jobs can print until the queue is resumed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.PrintTestPage">
            <summary>
            The PrintTestPage WMI class method prints a test page. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.RenamePrinter(System.String)">
            <summary>
            The RenamePrinter WMI class method renames a printer.
            </summary>
            <param name="NewPrinterName">New printer name.</param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.Resume">
            <summary>
            The Resume WMI class method resumes a paused print queue.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.SetDefaultPrinter">
            <summary>
            The SetDefaultPrinter WMI class method sets the default system printer for the user calling the method.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.Attributes">
            <summary>
            Bitmap of attributes for a Windows-based printing device.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.AveragePagesPerMinute">
            <summary>
            Printing rate, in average number of pages per minute, that a printer can produce output.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.Comment">
            <summary>
            Comment for a print queue.
            Example: Color printer
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.Default">
            <summary>
            If TRUE, the printer is the default printer.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.DefaultPriority">
            <summary>
            Default priority value assigned to each print job.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.Direct">
            <summary>
            If TRUE, the print job is sent directly to the printer. If FALSE, the print job is spooled. 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.DoCompleteFirst">
            <summary>
            If TRUE, the printer starts jobs that are finished spooling. If FALSE, the printer starts jobs in the order that the jobs are received. 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.DriverName">
            <summary>
            Name of the Windows printer driver.
            Example: Windows Fax Driver
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.EnableBIDI">
            <summary>
            If TRUE, the printer can print bidirectionally. 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.EnableDevQueryPrint">
            <summary>
            If TRUE, the printer holds documents in the queue when document and printer setups do not match. 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.ExtendedDetectedErrorState">
            <summary>
            Reports standard error information. Additional information should be recorded in DetectedErrorState. 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.ExtendedPrinterStatus">
            <summary>
            Status information for a printer that is different from information specified in the Availability property.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.Hidden">
            <summary>
            If TRUE, the printer is hidden from network users.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.KeepPrintedJobs">
            <summary>
            If TRUE, the print spooler does not delete the completed jobs.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.Local">
            <summary>
            If TRUE, the printer is not attached to a network. If both the Local and Network properties are set to TRUE, then the printer is a network printer.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.Location">
            <summary>
            Physical location of the printer.
            Example: Bldg. 38, Room 1164
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.Network">
            <summary>
            If TRUE, the printer is a network printer. If both the Local and Network properties are set to TRUE, then the printer is a network printer.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.Parameters">
            <summary>
            Optional parameters for the print processor.
            Example: Copies=2
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.PortName">
            <summary>
            Port that is used to transmit data to a printer. If a printer is connected to more than one port, the names of each port are separated by commas.
            Example: LPT1:, LPT2:, LPT3:
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.PrinterPaperNames">
            <summary>
            Array of paper sizes supported by the printer. The printer-specified names are used to represent supported paper sizes.
            Example: B5 (JIS)
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.PrinterState">
            <summary>
            One of the possible states relating to this printer. This property is obsolete. In place of this property, use PrinterStatus.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.PrintJobDataType">
            <summary>
            Data type of a print job waiting for the Windows-based printing device.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.PrintProcessor">
            <summary>
            Name of the print spooler that handles print jobs.
            Example: SPOOLSS.DLL
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.Priority">
            <summary>
            Priority of the printer. Jobs on a higher priority printer are scheduled first.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.Published">
            <summary>
            If TRUE, the printer is published in the network directory service.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.Queued">
            <summary>
            If TRUE, the printer buffers and queues print jobs.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.RawOnly">
            <summary>
            If TRUE, the printer accepts only raw data to be spooled.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.SeparatorFile">
            <summary>
            Name of the file used to create a separator page. This page is used to separate print jobs sent to the printer.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.ServerName">
            <summary>
            Name of the server that controls the printer. If this string is NULL, the printer is controlled locally.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.Shared">
            <summary>
            If TRUE, the printer is available as a shared network resource.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.ShareName">
            <summary>
            Share name of the Windows-based printing device.
            Example: \\PRINTSERVER1\PRINTER2
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.SpoolEnabled">
            <summary>
            This property is obsolete; do not use. If TRUE, spooling is enabled for printer.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.StartTime">
            <summary>
            Date and time that a printer can start to print a job—if the printer is limited to print at specific times. This value is expressed as the time elapsed since 12:00 AM GMT (Greenwich Mean Time).
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.UntilTime">
            <summary>
            Date and time that a printer can print the last job—if the printer is limited to print at specific times. This value is expressed as the time elapsed since 12:00 AM GMT (Greenwich Mean Time).
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.Printing.Win32_Printer.WorkOffline">
            <summary>
            If TRUE, you can queue print jobs on the computer when the printer is offline.
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.Printing.GetWin32_Printers">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.Printing.GetWin32_Printers.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.Printing.GetWin32_Printers.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_DesktopMonitor">
            <summary>
            The Win32_DesktopMonitor WMI class represents the type of monitor or display device attached to the computer system. Starting with Windows Vista, properties of this class replace Win32_DisplayConfiguration.
            Starting with Windows Vista, hardware that is not compatible with Windows Display Driver Model (WDDM) returns inaccurate property values for instances of this class.
            Windows Server 2003 and Windows XP:  This class returns data supplied by hardware compatible with Windows Device Driver Model (WDDM).
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_DesktopMonitor.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_DesktopMonitor.MonitorManufacturer">
            <summary>
            Name of the monitor manufacturer.
            Example: "NEC"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_DesktopMonitor.MonitorType">
            <summary>
            Type of monitor.
            Example: "NEC 5FGp"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_DesktopMonitor.PixelsPerXLogicalInch">
            <summary>
            Resolution along the x-axis (horizontal direction) of the monitor.(Pixels per Logical Inch) 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_DesktopMonitor.PixelsPerYLogicalInch">
            <summary>
            Resolution along the y-axis (vertical direction) of the monitor.(Pixels per Logical Inch) 
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.VideoAndMonitor.GetWin32_DesktopMonitors">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.VideoAndMonitor.GetWin32_DesktopMonitors.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.VideoAndMonitor.GetWin32_DesktopMonitors.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_DisplayConfiguration">
            <summary>
            [The Win32_DisplayConfiguration WMI class is no longer available for use as of Windows Vista. Instead, use the properties in the Win32_VideoController, Win32_DesktopMonitor, and CIM_VideoControllerResolution classes.]
            Windows Server 2003 and Windows XP:  
            The Win32_DisplayConfiguration WMI class represents configuration information for the display device on a computer running on a Windows operating system.
            Hardware that is not compatible with Windows Display Driver Model (WDDM) returns inaccurate property values for instances of this class.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_DisplayConfiguration.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_DisplayConfiguration.BitsPerPel">
            <summary>
            Number of bits used to represent the color in this configuration (bits per pixel).
            Example: 8
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_DisplayConfiguration.DeviceName">
            <summary>
            Name of the display device. MaxLen (260) 
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_DisplayConfiguration.DisplayFlags">
            <summary>
            If TRUE, the display device is color (versus monochrome), and noninterlaced (versus interlaced), by masking its value with the DM_GRAYSCALE and DM_INTERLACED masks respectively.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_DisplayConfiguration.DisplayFrequency">
            <summary>
            The vertical refresh rate for the display. The refresh rate for a monitor is the number of times the screen is redrawn per second (frequency). (Hertz)
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_DisplayConfiguration.DitherType">
            <summary>
            Dither type of the display. This property can assume predefined values of 1 to 5, or driver-defined values from 6 to 256. Line art dithering is a special dithering method that produces well-defined borders between black, white, and gray scalings. It is not suitable for images that include continuous graduations in intensity and hue (such as scanned photographs).
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_DisplayConfiguration.DriverVersion">
            <summary>
            Release version of the display driver.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_DisplayConfiguration.ICMIntent">
            <summary>
            Value of one of the three possible color matching methods (intents) that should be used by default. This property is used primarily for non-ICM applications. ICM applications establish intents by using the ICM functions. This property can assume predefined values of 1 to 3, or driver-defined values from 4 to 256.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_DisplayConfiguration.ICMMethod">
            <summary>
            How ICM is handled. For a non-ICM application, this property indicates if ICM is enabled or disabled. For ICM applications, the system examines this property to determine which part of the computer system handles ICM support.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_DisplayConfiguration.LogPixels">
            <summary>
            Number of pixels per logical inch. This property is valid only with devices that work with pixels (this excludes devices such as printers).(Pixels)
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_DisplayConfiguration.PelsHeight">
            <summary>
            Height of the displayable surface.(Pixels)
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_DisplayConfiguration.PelsWidth">
            <summary>
            Width of the displayable surface.(Pixels)
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_DisplayConfiguration.SpecificationVersion">
            <summary>
            Version number of the initialization data for the Windows display device.
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.VideoAndMonitor.GetWin32_DisplayConfigurations">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.VideoAndMonitor.GetWin32_DisplayConfigurations.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.VideoAndMonitor.GetWin32_DisplayConfigurations.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_VideoController">
            <summary>
            The Win32_VideoController WMI class represents the capabilities and management capacity of the video controller on a computer system running Windows. Starting with Windows Vista, properties of this class replace Win32_DisplayConfiguration.
            Starting with Windows Vista, hardware that is not compatible with Windows Display Driver Model (WDDM) returns inaccurate property values for instances of this class.
            Windows Server 2003 and Windows XP:  This class is supported.
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_VideoController.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_VideoController.AdapterCompatibility">
            <summary>
            General chipset used for this controller to compare compatibilities with the system.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_VideoController.AdapterDACType">
            <summary>
            Name or identifier of the digital-to-analog converter (DAC) chip. The character set of this property is alphanumeric.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_VideoController.AdapterRAM">
            <summary>
            Memory size of the video adapter.(Bytes) 
            Example: 64000
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_VideoController.ColorTableEntries">
            <summary>
            Size of the system's color table. The device must have a color depth of no more than 8 bits per pixel; otherwise, this property is not set.
            Example: 256
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_VideoController.DeviceSpecificPens">
            <summary>
            Current number of device-specific pens. A value of 0xffff means that the device does not support pens.
            Example: 3
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_VideoController.DitherType">
            <summary>
            Dither type of the video controller. The property can be one of the predefined values, or a driver-defined value greater than or equal to 256. If line art dithering is chosen, the controller uses a dithering method that produces well-defined borders between black, white, and gray scalings. Line art dithering is not suitable for images that include continuous graduations in intensity and hue such as scanned photographs.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_VideoController.DriverDate">
            <summary>
            Last modification date and time of the currently installed video driver.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_VideoController.DriverVersion">
            <summary>
            Version number of the video driver.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_VideoController.ICMIntent">
            <summary>
            Specific value of one of the three possible color-matching methods or intents that should be used by default. This property is used primarily for non-ICM applications. ICM applications establish intents by using the ICM functions. This property can be a predefined value or a driver defined value greater than or equal to 256. Color matching based on saturation is the most appropriate choice for business graphs when dithering is not desired. Color matching based on contrast is the most appropriate choice for scanned or photographic images when dithering is desired. Color matching optimized to match the exact color requested is most appropriate for use with business logos or other images when an exact color match is desired.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_VideoController.ICMMethod">
            <summary>
            Method of handling ICM. For non-ICM applications, this property determines if ICM is enabled. For ICM applications, the system examines this property to determine how to handle ICM support. This property can be a predefined value or a driver-defined value greater than or equal to 256. The value determines which system handles image color matching.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_VideoController.InfFilename">
            <summary>
            Path to the video adapter's .inf file.
            Example: "C:\WINNT\SYSTEM32\DRIVERS"
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_VideoController.InfSection">
            <summary>
            Section of the .inf file where the Windows video information resides.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_VideoController.InstalledDisplayDrivers">
            <summary>
            Name of the installed display device driver.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_VideoController.Monochrome">
            <summary>
            If TRUE, gray scale is used to display images.
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_VideoController.ReservedSystemPaletteEntries">
            <summary>
            Number of reserved entries in the system palette. The operating system may reserve entries to support standard colors for task bars and other desktop display items. This index is valid only if the device driver sets the RC_PALETTE bit in the RASTERCAPS index, and is available only if the driver is compatible with 16-bit Windows. If the system is not using a palette, ReservedSystemPaletteEntries is not set.
            Example: 20
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_VideoController.SpecificationVersion">
            <summary>
            Version number of the initialization data specification (upon which the structure is based).
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_VideoController.SystemPaletteEntries">
            <summary>
            Current number of color index entries in the system palette. This index is valid only if the device driver sets the RC_PALETTE bit in the RASTERCAPS index, and is available only if the driver is compatible with 16-bit Windows. If the system is not using a palette, SystemPaletteEntries is not set.
            Example: 20
            </summary>
        </member>
        <member name="P:WMI.NET.ComputerSystemHardware.VideoAndMonitor.Win32_VideoController.VideoModeDescription">
            <summary>
            Current resolution, color, and scan mode settings of the video controller.
            Example: "1024 x 768 x 256 colors"
            </summary>
        </member>
        <member name="T:WMI.NET.ComputerSystemHardware.VideoAndMonitor.GetWin32_VideoControllers">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.VideoAndMonitor.GetWin32_VideoControllers.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.ComputerSystemHardware.VideoAndMonitor.GetWin32_VideoControllers.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.Consts">
            <summary>
            
            </summary>
        </member>
        <member name="F:WMI.NET.Consts.DateTimeFormat">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.WMI_Conveter">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.WMI_Conveter.GetByteValue(System.Management.ManagementBaseObject,System.String)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.WMI_Conveter.GetByteValueArray(System.Management.ManagementBaseObject,System.String)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.WMI_Conveter.GetStringValue(System.Management.ManagementBaseObject,System.String)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.WMI_Conveter.GetStringValueArray(System.Management.ManagementBaseObject,System.String)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.WMI_Conveter.GetBoolValue(System.Management.ManagementBaseObject,System.String)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.WMI_Conveter.GetUIntValue(System.Management.ManagementBaseObject,System.String)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.WMI_Conveter.GetIntValue(System.Management.ManagementBaseObject,System.String)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.WMI_Conveter.GetUlongValue(System.Management.ManagementBaseObject,System.String)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.WMI_Conveter.GetDoubleValue(System.Management.ManagementBaseObject,System.String)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.WMI_Conveter.ConvertOffset(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.WMI_Conveter.GetDateTimeOffsetValue(System.Management.ManagementBaseObject,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
            <param name="value"></param>
            <param name="Inputformat"></param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.WMI_Conveter.GetUshortValue(System.Management.ManagementBaseObject,System.String)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.WMI_Conveter.GetUshortValueArray(System.Management.ManagementBaseObject,System.String)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.WMI_Conveter.getTypeByName(System.String)">
            <summary>
            
            </summary>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="T:WMI.NET.OperatingSystem.Users.Win32_Account">
            <summary>
            The Win32_Account abstract WMI class contains information about user accounts and group accounts known to the computer system running Windows. User or group names recognized by a Windows domain are descendants (or members) of this class.
            </summary>
        </member>
        <member name="M:WMI.NET.OperatingSystem.Users.Win32_Account.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.OperatingSystem.Users.Win32_Account.Domain">
            <summary>
            Name of the Windows domain to which a group or user belongs.
            Example: "NA-SALES" 
            </summary>
        </member>
        <member name="P:WMI.NET.OperatingSystem.Users.Win32_Account.LocalAccount">
            <summary>
            If TRUE, the account is defined on the local machine. To retrieve only accounts defined on the local machine, design a query that includes the condition "LocalAccount=TRUE". 
            </summary>
        </member>
        <member name="P:WMI.NET.OperatingSystem.Users.Win32_Account.SID">
            <summary>
            Security identifier (SID) for this account. A SID is a string value of variable length used to identify a trustee. Each account has a unique SID issued by an authority (such as a Windows domain), stored in a security database. When a user logs on, the system retrieves the user's SID from the database and places it in the user's access token. The system uses the SID in the user's access token to identify the user in all subsequent interactions with Windows security. When a SID has been used as the unique identifier for a user or group, it cannot be used again to identify another user or group.
            </summary>
        </member>
        <member name="P:WMI.NET.OperatingSystem.Users.Win32_Account.SIDType">
            <summary>
            Enumerated values that specify the type of security identifier (SID).
            </summary>
        </member>
        <member name="T:WMI.NET.OperatingSystem.Users.GetWin32_Accounts">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.OperatingSystem.Users.GetWin32_Accounts.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.OperatingSystem.Users.GetWin32_Accounts.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.OperatingSystem.Users.Win32_Group">
            <summary>
            The Win32_Group WMI class represents data about a group account. A group account allows access privileges to be changed for a list of users. Example: Marketing2.
            </summary>
        </member>
        <member name="M:WMI.NET.OperatingSystem.Users.Win32_Group.Rename(System.String)">
            <summary>
            The Rename WMI class method allows the group name to be changed. 
            </summary>
            <param name="Name">Name of the Windows user account on the domain specified by the Domain property of this class.</param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.OperatingSystem.Users.Win32_Group.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="T:WMI.NET.OperatingSystem.Users.GetWin32_Groups">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.OperatingSystem.Users.GetWin32_Groups.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.OperatingSystem.Users.GetWin32_Groups.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.OperatingSystem.Users.Win32_UserAccount">
            <summary>
            The Win32_UserAccount WMI class contains information about a user account on a computer system running Windows.
            Note  Because both the Name and Domain are key properties, enumerating Win32_UserAccount on a large network can negatively affect performance. Calling GetObject or querying for a specific instance has less impact.
            </summary>
        </member>
        <member name="M:WMI.NET.OperatingSystem.Users.Win32_UserAccount.Rename(System.String)">
            <summary>
            The Rename WMI class method renames a user account name. This functionality is implemented as a method to provide a separate context for the new name that is distinguishable from the key property value for Name that is associated with the instance to be modified.
            </summary>
            <param name="Name">New account name.</param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.OperatingSystem.Users.Win32_UserAccount.#ctor(System.Management.ManagementBaseObject)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
        </member>
        <member name="P:WMI.NET.OperatingSystem.Users.Win32_UserAccount.AccountType">
            <summary>
             Flags that describe the characteristics of a Windows user account.
            </summary>
        </member>
        <member name="P:WMI.NET.OperatingSystem.Users.Win32_UserAccount.Disabled">
            <summary>
            Windows user account is disabled.
            </summary>
        </member>
        <member name="P:WMI.NET.OperatingSystem.Users.Win32_UserAccount.FullName">
            <summary>
            Full name of a local user, for example: "Dan Wilson".
            </summary>
        </member>
        <member name="P:WMI.NET.OperatingSystem.Users.Win32_UserAccount.Lockout">
            <summary>
            If true, the user account is locked out of the Windows operating system.
            </summary>
        </member>
        <member name="P:WMI.NET.OperatingSystem.Users.Win32_UserAccount.PasswordChangeable">
            <summary>
            If true, the password on this user account can be changed.
            </summary>
        </member>
        <member name="P:WMI.NET.OperatingSystem.Users.Win32_UserAccount.PasswordExpires">
            <summary>
            If true, the password on this user account expires.
            </summary>
        </member>
        <member name="P:WMI.NET.OperatingSystem.Users.Win32_UserAccount.PasswordRequired">
            <summary>
            If true, a password is required on a Windows user account. If false, this account does not require a password.
            </summary>
        </member>
        <member name="T:WMI.NET.OperatingSystem.Users.GetWin32_UserAccounts">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.OperatingSystem.Users.GetWin32_UserAccounts.GetCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.OperatingSystem.Users.GetWin32_UserAccounts.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WMI.NET.Methods">
            <summary>
            
            </summary>
        </member>
        <member name="M:WMI.NET.Methods.ObjectQuery_WHERE(System.Management.ManagementBaseObject,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
            <param name="Win32Name"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.Methods.FindSubClassName(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.Methods.Win32ClassDynamicType(System.String)">
            <summary>
            
            </summary>
            <param name="Win32ClassName"></param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.Methods.GetSubWin32Class(System.Management.ManagementBaseObject,System.String)">
            <summary>
            
            </summary>
            <param name="mbo"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.Methods.Searcher(System.Management.SelectQuery)">
            <summary>
            
            </summary>
            <param name="SelectQuery"></param>
            <returns></returns>
        </member>
        <member name="M:WMI.NET.Methods.SingleMBO(System.Management.ManagementObjectSearcher)">
            <summary>
            
            </summary>
            <param name="searcher"></param>
            <returns></returns>
        </member>
    </members>
</doc>
